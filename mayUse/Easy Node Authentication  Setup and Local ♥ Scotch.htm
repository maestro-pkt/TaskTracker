<!DOCTYPE html>
<!-- saved from url=(0078)http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local -->
<html itemscope="" itemtype="http://schema.org/" lang="en-US"><script>var urchinTracker=function(){},_gaq={push:function(){try {if(arguments[0][0]=='_link')window.location.href=arguments[0][1]}catch(er){}}},_gat={_createTracker:function(){}, _getTracker:function(){return{__noSuchMethod__:function(){},_link:function(o){if(o)location.href=o;},_linkByPost:function(){return true;},_getLinkerUrl:function(o){return o;},_trackEvent:function(){}}}};</script><script>var gapi={plusone:{render:function(){},go:function(){}}};</script><script>FB={api:function(){},ui:function(){},Event:{subscribe:function(){}},UIServer:{},XFBML:{parse:function(){}},init:function(){},__noSuchMethod__:function(){}};</script><script type="text/javascript" async="" src="http://stats.g.doubleclick.net/dc.js"></script><script type="text/javascript" async="" src="https://apis.google.com/js/platform.js"></script><script id="twitter-wjs" src="http://platform.twitter.com/widgets.js"></script><script id="facebook-jssdk" src="http://connect.facebook.net/en_US/all.js"></script><script>var GA_googleFillSlot=GA_googleFetchAds=GA_googleAddSlot=GS_googleEnableAllServices=GS_googleAddAdSenseService=function(){};</script><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	
	<meta charset="utf-8">
	<!--
	                                 __                __
	                                /  |              /  |
	  _______   _______   ______   _$$ |_     _______ $$ |____
	 /       | /       | /      \ / $$   |   /       |$$      \
	/$$$$$$$/ /$$$$$$$/ /$$$$$$  |$$$$$$/   /$$$$$$$/ $$$$$$$  |
	$$      \ $$ |      $$ |  $$ |  $$ | __ $$ |      $$ |  $$ |
	 $$$$$$  |$$ \_____ $$ \__$$ |  $$ |/  |$$ \_____ $$ |  $$ |
	/     $$/ $$       |$$    $$/   $$  $$/ $$       |$$ |  $$ |
	$$$$$$$/   $$$$$$$/  $$$$$$/     $$$$/   $$$$$$$/ $$/   $$/   4 life
	-->
	<title>Easy Node Authentication: Setup and Local â™¥ Scotch</title>
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"UA4DU1JRGwADUVJQDwQ="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o?o:e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e){function n(t,e,n){n||(n={});for(var r=o[t],a=r&&r.length||0,s=n[i]||(n[i]={}),u=0;a>u;u++)r[u].apply(s,e);return s}function r(t,e){var n=o[t]||(o[t]=[]);n.push(e)}var o={},i="nr@context";e.exports={on:r,emit:n}},{}],2:[function(t){function e(t,e,n,i,s){return u?u-=1:r("err",[s||new UncaughtException(t,e,n)]),"function"==typeof a?a.apply(this,o(arguments)):!1}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function n(t){r("err",[t,(new Date).getTime()])}var r=t("handle"),o=t(6),i=t(5),a=window.onerror,s=!1,u=0;t("loader").features.push("err"),window.onerror=e,NREUM.noticeError=n;try{throw new Error}catch(d){"stack"in d&&(t(1),t(2),"addEventListener"in window&&t(3),window.XMLHttpRequest&&XMLHttpRequest.prototype&&XMLHttpRequest.prototype.addEventListener&&t(4),s=!0)}i.on("fn-start",function(){s&&(u+=1)}),i.on("fn-err",function(t,e,r){s&&(this.thrown=!0,n(r))}),i.on("fn-end",function(){s&&!this.thrown&&u>0&&(u-=1)}),i.on("internal-error",function(t){r("ierr",[t,(new Date).getTime(),!0])})},{1:5,2:4,3:3,4:6,5:1,6:14,handle:"D5DuLP",loader:"G9z0Bl"}],3:[function(t){function e(t){r.inPlace(t,["addEventListener","removeEventListener"],"-",n)}function n(t){return t[1]}var r=t(1),o=(t(3),t(2));if(e(window),"getPrototypeOf"in Object){for(var i=document;i&&!i.hasOwnProperty("addEventListener");)i=Object.getPrototypeOf(i);i&&e(i);for(var a=XMLHttpRequest.prototype;a&&!a.hasOwnProperty("addEventListener");)a=Object.getPrototypeOf(a);a&&e(a)}else XMLHttpRequest.prototype.hasOwnProperty("addEventListener")&&e(XMLHttpRequest.prototype);o.on("addEventListener-start",function(t){if(t[1]){var e=t[1];"function"==typeof e?this.wrapped=e["nr@wrapped"]?t[1]=e["nr@wrapped"]:e["nr@wrapped"]=t[1]=r(e,"fn-"):"function"==typeof e.handleEvent&&r.inPlace(e,["handleEvent"],"fn-")}}),o.on("removeEventListener-start",function(t){var e=this.wrapped;e&&(t[1]=e)})},{1:15,2:1,3:14}],4:[function(t){var e=(t(3),t(1)),n=t(2);e.inPlace(window,["requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame"],"raf-"),n.on("raf-start",function(t){t[0]=e(t[0],"fn-")})},{1:15,2:1,3:14}],5:[function(t){function e(t){var e=t[0];"string"==typeof e&&(e=new Function(e)),t[0]=n(e,"fn-")}var n=(t(3),t(1)),r=t(2);n.inPlace(window,["setTimeout","setInterval","setImmediate"],"setTimer-"),r.on("setTimer-start",e)},{1:15,2:1,3:14}],6:[function(t){function e(){o.inPlace(this,s,"fn-")}function n(t,e){o.inPlace(e,["onreadystatechange"],"fn-")}function r(t,e){return e}var o=t(1),i=t(2),a=window.XMLHttpRequest,s=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"];window.XMLHttpRequest=function(t){var n=new a(t);try{i.emit("new-xhr",[],n),o.inPlace(n,["addEventListener","removeEventListener"],"-",function(t,e){return e}),n.addEventListener("readystatechange",e,!1)}catch(r){try{i.emit("internal-error",r)}catch(s){}}return n},window.XMLHttpRequest.prototype=a.prototype,o.inPlace(XMLHttpRequest.prototype,["open","send"],"-xhr-",r),i.on("send-xhr-start",n),i.on("open-xhr-start",n)},{1:15,2:1}],7:[function(t){function e(){function e(t){if("string"==typeof t&&t.length)return t.length;if("object"!=typeof t)return void 0;if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if("undefined"!=typeof FormData&&t instanceof FormData)return void 0;try{return JSON.stringify(t).length}catch(e){return void 0}}function n(t){var n=this.params,r=this.metrics;if(!this.ended){this.ended=!0;for(var i=0;u>i;i++)t.removeEventListener(s[i],this.listener,!1);if(!n.aborted){if(r.duration=(new Date).getTime()-this.startTime,4===t.readyState){n.status=t.status;var a=t.responseType,d="arraybuffer"===a||"blob"===a||"json"===a?t.response:t.responseText,f=e(d);if(f&&(r.rxSize=f),this.sameOrigin){var c=t.getResponseHeader("X-NewRelic-App-Data");c&&(n.cat=c.split(", ").pop())}}else n.status=0;r.cbTime=this.cbTime,o("xhr",[n,r])}}}function r(t,e){var n=i(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}t("loader").features.push("xhr");var o=t("handle"),i=t(1),a=t(5),s=["load","error","abort","timeout"],u=s.length,d=t(2);t(3),t(4),a.on("new-xhr",function(){this.totalCbs=0,this.called=0,this.cbTime=0,this.end=n,this.ended=!1,this.xhrGuids={}}),a.on("open-xhr-start",function(t){this.params={method:t[0]},r(this,t[1]),this.metrics={}}),a.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),a.on("send-xhr-start",function(t,n){var r=this.metrics,o=t[0],i=this;if(r&&o){var d=e(o);d&&(r.txSize=d)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(i.params.aborted=!0),("load"!==t.type||i.called===i.totalCbs&&(i.onloadCalled||"function"!=typeof n.onload))&&i.end(n)}catch(e){try{a.emit("internal-error",e)}catch(r){}}};for(var f=0;u>f;f++)n.addEventListener(s[f],this.listener,!1)}),a.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),a.on("xhr-load-added",function(t,e){var n=""+d(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),a.on("xhr-load-removed",function(t,e){var n=""+d(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),a.on("addEventListener-end",function(t,e){e instanceof XMLHttpRequest&&"load"===t[0]&&a.emit("xhr-load-added",[t[1],t[2]],e)}),a.on("removeEventListener-end",function(t,e){e instanceof XMLHttpRequest&&"load"===t[0]&&a.emit("xhr-load-removed",[t[1],t[2]],e)}),a.on("fn-start",function(t,e,n){e instanceof XMLHttpRequest&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),a.on("fn-end",function(t,e){this.xhrCbStart&&a.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}window.XMLHttpRequest&&XMLHttpRequest.prototype&&XMLHttpRequest.prototype.addEventListener&&!/CriOS/.test(navigator.userAgent)&&e()},{1:8,2:11,3:3,4:6,5:1,handle:"D5DuLP",loader:"G9z0Bl"}],8:[function(t,e){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");return!r.port&&o[1]&&(r.port=o[1].split("/")[0].split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname),r.sameOrigin=!e.hostname||e.hostname===document.domain&&e.port===n.port&&e.protocol===n.protocol,r}},{}],handle:[function(t,e){e.exports=t("D5DuLP")},{}],D5DuLP:[function(t,e){function n(t,e){var n=r[t];return n?n.apply(this,e):(o[t]||(o[t]=[]),void o[t].push(e))}var r={},o={};e.exports=n,n.queues=o,n.handlers=r},{}],11:[function(t,e){function n(t){if(!t||"object"!=typeof t&&"function"!=typeof t)return-1;if(t===window)return 0;if(o.call(t,"__nr"))return t.__nr;try{return Object.defineProperty(t,"__nr",{value:r,writable:!0,enumerable:!1}),r}catch(e){return t.__nr=r,r}finally{r+=1}}var r=1,o=Object.prototype.hasOwnProperty;e.exports=n},{}],loader:[function(t,e){e.exports=t("G9z0Bl")},{}],G9z0Bl:[function(t,e){function n(){var t=p.info=NREUM.info;if(t&&t.agent&&t.licenseKey&&t.applicationID&&u&&u.body){p.proto="https"===c.split(":")[0]||t.sslForHttp?"https://":"http://",a("mark",["onload",i()]);var e=u.createElement("script");e.src=p.proto+t.agent,u.body.appendChild(e)}}function r(){"complete"===u.readyState&&o()}function o(){a("mark",["domContent",i()])}function i(){return(new Date).getTime()}var a=t("handle"),s=window,u=s.document,d="addEventListener",f="attachEvent",c=(""+location).split("?")[0],p=e.exports={offset:i(),origin:c,features:[]};u[d]?(u[d]("DOMContentLoaded",o,!1),s[d]("load",n,!1)):(u[f]("onreadystatechange",r),s[f]("onload",n)),a("mark",["firstbyte",i()])},{handle:"D5DuLP"}],14:[function(t,e){function n(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(0>o?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=n},{}],15:[function(t,e){function n(t,e,r,s){function nrWrapper(){try{var n,a=u(arguments),d=this,f=r&&r(a,d)||{}}catch(c){i([c,"",[a,d,s],f])}o(e+"start",[a,d,s],f);try{return n=t.apply(d,a)}catch(p){throw o(e+"err",[a,d,p],f),p}finally{o(e+"end",[a,d,n],f)}}return a(t)?t:(e||(e=""),nrWrapper[n.flag]=!0,nrWrapper)}function r(t,e,r,o){r||(r="");var i,s,u,d="-"===r.charAt(0);for(u=0;u<e.length;u++)s=e[u],i=t[s],a(i)||(t[s]=n(i,d?s+r:r,o,s,t))}function o(t,e,n){try{s.emit(t,e,n)}catch(r){i([r,t,e,n])}}function i(t){try{s.emit("internal-error",t)}catch(e){}}function a(t){return!(t&&"function"==typeof t&&t.apply&&!t[n.flag])}var s=t(1),u=t(2);e.exports=n,n.inPlace=r,n.flag="nr@wrapper"},{1:1,2:14}]},{},["G9z0Bl",2,7]);</script>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta content="yes" name="apple-mobile-web-app-capable">
	<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">

	<!-- RSS -->
	<link rel="alternate" type="application/rss+xml" title="Scotch â™¥ Developers bringing fire to the people." href="http://scotch.io/feed">

	<!-- ICONS/TILES/WHATEVER REALLY NEED A MORE UNIVERSAL STANDARD -->
	<link rel="shortcut icon" sizes="16x16 24x24 32x32 48x48 64x64" href="http://scotch.io/favicon.ico">
	<link rel="apple-touch-icon" sizes="57x57" href="http://scotch.io/wp-content/themes/scotch-twentyfive/img/icons/favicon-57.png">
	<link rel="apple-touch-icon-precomposed" sizes="57x57" href="http://scotch.io/wp-content/themes/scotch-twentyfive/img/icons/favicon-57.png">
	<link rel="apple-touch-icon" sizes="72x72" href="http://scotch.io/wp-content/themes/scotch-twentyfive/img/icons/favicon-72.png">
	<link rel="apple-touch-icon" sizes="114x114" href="http://scotch.io/wp-content/themes/scotch-twentyfive/img/icons/favicon-114.png">
	<link rel="apple-touch-icon" sizes="144x144" href="http://scotch.io/wp-content/themes/scotch-twentyfive/img/icons/favicon-144.png">
	<link rel="apple-touch-icon" sizes="152x152" href="http://scotch.io/wp-content/themes/scotch-twentyfive/img/icons/favicon-152.png">
	<meta name="application-name" content="Scotch Web Development">
	<meta name="msapplication-TileImage" content="http://scotch.io/wp-content/themes/scotch-twentyfive/img/icons/favicon-144.png">
	<meta name="msapplication-TileColor" content="#2A2A2A">

	<!-- MUST PLEASE EVERYONE -->
				
		<!-- SEARCH ENGINES -->
		<meta name="author" content="Chris Sevilleja">
		<meta name="description" content="Authentication and logins in Node can be a complicated thing. Actually logging in for any application can be a pain. This article series will deal with authenticating in your Node application using the package Passport. What weâ€™ll be building: We...">
		<link rel="canonical" href="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/Easy Node Authentication  Setup and Local â™¥ Scotch.htm">

		<!-- THE TWITTER MACHINE -->
		<meta name="twitter:card" content="summary_large_image">
		<meta name="twitter:site" content="@scotch_io">
		<meta name="twitter:creator" content="sevilayha">
		<meta name="twitter:title" content="Easy Node Authentication: Setup and Local">
		<meta name="twitter:description" content="Authentication and logins in Node can be a complicated thing. Actually logging in for any application can be a pain. This article series will deal with authenticating in your Node application using the package Passport. What weâ€™ll be building: We...">
		<meta name="twitter:image:src" content="http://scotch.io/wp-content/uploads/2013/12/node-authentication-header.jpg">

		<!-- FACESPACE -->
		<meta property="fb:admins" content="579622216,709634581">
	 	<meta property="fb:app_id" content="1389892087910588">
	 	<meta property="og:url" content="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local">
	 	<meta property="og:type" content="article">
	 	<meta property="og:title" content="Easy Node Authentication: Setup and Local">
		<meta property="og:image" content="http://scotch.io/wp-content/uploads/2013/12/node-authentication-header.jpg">
	 	<meta property="og:description" content="Authentication and logins in Node can be a complicated thing. Actually logging in for any application can be a pain. This article series will deal with authenticating in your Node application using the package Passport. What weâ€™ll be building: We...">
	 	<meta property="og:site_name" content="Scotch">
	 	<meta property="article:author" content="http://facebook.com/sevilayha">
	 	<meta property="article:publisher" content="https://www.facebook.com/scotchdevelopment">

	 	<!-- G++ -->
	 	<meta itemprop="name" content="Easy Node Authentication: Setup and Local">
	 	<meta itemprop="description" content="Authentication and logins in Node can be a complicated thing. Actually logging in for any application can be a pain. This article series will deal with authenticating in your Node application using the package Passport. What weâ€™ll be building: We...">
		<meta itemprop="image" content="http://scotch.io/wp-content/uploads/2013/12/node-authentication-header.jpg">

		
	<!-- SCROLLS -->
	<!--[if lt IE 9]>
      <script src="//oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
      <script src="//oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
	<link rel="stylesheet" href="http://scotch.io/wp-content/themes/scotch-twentyfive/css/complete.css">
	<link rel="stylesheet" href="http://scotch.io/wp-content/themes/scotch-twentyfive/style.css">

	<!-- BEGIN UGLY WP HEAD FORMATTING -->
	<link rel="stylesheet" id="yarppWidgetCss-css" href="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/widget.css" type="text/css" media="all">
<script type="text/javascript" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/complete.js"></script><style type="text/css"></style>
<script type="text/javascript" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/allthatpower.js"></script>

			<!-- CUSTOM FIELDS CSS -->
		
		
		<!-- CUSTOM FIELDS JS -->
		
			

<script async="" type="text/javascript" src="http://disqus.com/forums/scotchwebdevelopment/count.js"></script><script type="text/javascript" async="" src="http://scotchwebdevelopment.disqus.com/embed.js?pname=wordpress&pver=2.74"></script><script type="text/javascript" async="" src="http://s3.buysellads.com/ac/bsa.js"></script><style>@-webkit-keyframes popamuioomtsattxwqnwaebxroyuenoohpnlfr {50% {-webkit-transform:scale(1.2);}100% {-webkit-transform:scale(1);}}@keyframes popamuioomtsattxwqnwaebxroyuenoohpnlfr {50% {-webkit-transform:scale(1.2);transform:scale(1.2);}100% {-webkit-transform:scale(1);transform:scale(1);}}#amuioomtsattxwqnwaebxroyuenoohpnlfr{padding:0;margin:0;font:13px Arial,Helvetica;text-transform:none;font-size: 100%;vertical-align:baseline;line-height:normal;color:#fff;border:solid 2px #fff !important;box-sizing:content-box !important;color:#fff !important;display:block !important;height:auto !important;margin:0 !important;opacity:0.9 !important;padding:7px 10px !important;position:fixed !important;visibility:visible !important;width:auto !important;z-index:2147483647 !important;-webkit-border-radius:5px !important;-webkit-box-shadow:0px 0px 20px #000 !important;-webkit-box-sizing:content-box !important;}.amuioomtsattxwqnwaebxroyuenoohpnlfr-blocked{padding:0;margin:0;font:13px Arial,Helvetica;text-transform:none;font-size: 100%;vertical-align:baseline;line-height:normal;color:#fff;color:#777 !important;display:inline !important;text-decoration:line-through !important;}#amuioomtsattxwqnwaebxroyuenoohpnlfr br{display:block !important;padding:0;margin:0;font:13px Arial,Helvetica;text-transform:none;font-size: 100%;vertical-align:baseline;line-height:normal;color:#fff;}#amuioomtsattxwqnwaebxroyuenoohpnlfr span{background:transparent !important;padding:0;margin:0;font:13px Arial,Helvetica;text-transform:none;font-size: 100%;vertical-align:baseline;line-height:normal;color:#fff;}#amuioomtsattxwqnwaebxroyuenoohpnlfr div{padding:0;margin:0;font:13px Arial,Helvetica;text-transform:none;font-size: 100%;vertical-align:baseline;line-height:normal;color:#fff;border:0 !important;margin:0 !important;padding:0 !important;width:auto !important;letter-spacing:normal !important;font:13px Arial,Helvetica !important;text-align:left !important;text-shadow:none !important;text-transform:none !important;word-spacing:normal !important;}#amuioomtsattxwqnwaebxroyuenoohpnlfr a{padding:0;margin:0;font:13px Arial,Helvetica;text-transform:none;font-size: 100%;vertical-align:baseline;line-height:normal;color:#fff;font-weight:normal !important;background:none !important;text-decoration:underline !important;color:#fff !important;}a#amuioomtsattxwqnwaebxroyuenoohpnlfr-gear{padding:0;margin:0;font:13px Arial,Helvetica;text-transform:none;font-size: 100%;vertical-align:baseline;line-height:normal;color:#fff;text-decoration:none !important;position:absolute !important;display:none !important;font-size:20px !important;width:20px !important;height:20px !important;line-height:20px !important;text-align:center !important;background-color:rgba(255,255,255,.8) !important;background-image:url(chrome-extension://mlomiejdfkolichcflejclcbmpeaniij/images/gear.svg) !important;background-size:16px 16px !important;background-position:center center !important;background-repeat:no-repeat !important;text-decoration:none !important;}a#amuioomtsattxwqnwaebxroyuenoohpnlfr-gear:hover{-webkit-animation-name:popamuioomtsattxwqnwaebxroyuenoohpnlfr !important;animation-name:popamuioomtsattxwqnwaebxroyuenoohpnlfr !important;-webkit-animation-duration:0.3s !important;animation-duration:0.3s !important;}#amuioomtsattxwqnwaebxroyuenoohpnlfr:hover #amuioomtsattxwqnwaebxroyuenoohpnlfr-gear{text-decoration:none !important;display:inline-block !important;}@media print{#amuioomtsattxwqnwaebxroyuenoohpnlfr{display:none !important;}}</style></head>
<body class="single single-post postid-723 single-format-standard" gram_dict="true">
	<div id="fb-root"></div>
	<script>
		window.fbAsyncInit = function() {
			// init the FB JS SDK
			FB.init({
				appId      : '1389892087910588',
				status     : false,
				xfbml      : true
			});
		};
		(function(d, s, id) {
		  var js, fjs = d.getElementsByTagName(s)[0];
		  if (d.getElementById(id)) return;
		  js = d.createElement(s); js.id = id;
		  js.src = "//connect.facebook.net/en_US/all.js";
		  fjs.parentNode.insertBefore(js, fjs);
		}(document, 'script', 'facebook-jssdk'));
	</script>

<div id="header">
	<nav id="main-nav">
		<ul class="text-center">
			<li id="nav-logo"><a id="logo" href="http://scotch.io/">Scotch</a></li>
			<li id="bar-talk-nav">
				<a href="http://scotch.io/bar-talk">
					<span class="li_news"></span> Bar Talk
				</a>
			</li>
			<li id="tutorials-nav">
				<a href="http://scotch.io/tutorials">
					<span class="li_bulb"></span> Tutorials
				</a>
			</li>
			<li>
				<a href="http://scotch.io/series">
					<span class="li_diamond"></span> Series
				</a>
			</li>
			<li>
				<a href="http://scotch.io/quick-tips">
					<span class="li_star"></span> Quick Tips
				</a>
			</li>
			<li>
				<a href="http://scotch.io/work">
					<span class="li_fire"></span> Projects
				</a>
			</li>
			<li>
				<a href="http://scotch.io/about">
					<span class="li_user"></span> About
				</a>
			</li>
			<li id="mobile-toggle">
				<a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#" class="toggle-mobile"><i class="fa fa-bars"></i></a>
			</li>
		</ul>
	</nav>

	<nav id="top-nav" class="hidden-xs">
		<div id="search-form">
			<span class="li_search"></span>
			<form action="http://scotch.io/" method="GET" name="search" role="search">
				<input type="search" name="s">
			</form>
		</div>

		<ul class="text-center">
			<li id="header-google-plus" class="header-social sbg-google-plus">
				<a class="social-cover sbg-google-plus" href="https://plus.google.com/b/113854128330570384219/+ScotchIo">
					<span class="fa fa-google-plus"></span>
				</a>
					<div class="g-follow" data-annotation="none" data-height="15" data-href="//plus.google.com/u/0/113854128330570384219" data-rel="publisher"></div>
			</li>
			<li id="header-twitter" class="header-social sbg-twitter">
				<a class="social-cover sbg-twitter" href="https://twitter.com/scotch_io">
					<span class="fa fa-twitter"></span>
				</a>
				<a href="https://twitter.com/scotch_io" class="twitter-follow-button social-action" data-show-count="false" data-show-screen-name="false" style="display: block;"><iframe style="width: 30px; height: 19px; border: 0px;"></iframe></a>
			</li> 
			<li id="header-facebook" class="header-social sbg-facebook">
				<a class="social-cover sbg-facebook" href="https://www.facebook.com/scotchdevelopment">
					<span class="fa fa-facebook"></span>
				</a>
				<div class="fb-like social-action" data-href="https://www.facebook.com/scotchdevelopment" data-width="50" data-layout="button" data-action="like" data-show-faces="false" data-share="false" style="display: block;"><iframe style="width: 30px; height: 19px; border: 0px;"></iframe></div>
			</li>
			<li>
				<a class="sbg-email" href="http://eepurl.com/Ly0br"><span class="fa fa-envelope"></span></a>
			</li>
			<li>
				<a class="sbg-rss" href="http://scotch.io/feed" target="_blank"><span class="fa fa-rss"></span></a>
			</li>

			<li><a id="search-button" href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#"><span class="li_search"></span></a></li>
		</ul>
	</nav>
</div>


<div id="site-wrapper">

<div id="mobile-nav">


	<ul>
		<li><a href="http://scotch.io/bar-talk">Bar Talk</a></li>
		<li><a href="http://scotch.io/tutorials">Tutorials</a></li>
		<li><a href="http://scotch.io/quick-tips">Quick Tips</a></li>
	</ul>
	<form action="http://scotch.io/" method="GET" role="search" class="clearfix">
		<input type="search" name="s">
		<button type="submit"><span class="li_search"></span></button>
	</form>
	<ul>
	<li class="social-mobile clearfix">
		<a class="facebook" href="https://www.facebook.com/scotchdevelopment"><i class="fa fa-facebook"></i></a>
		<a class="twitter" href="https://twitter.com/scotch_io"><i class="fa fa-twitter"></i></a>
		<a class="google" href="https://plus.google.com/u/0/+ScotchIo/posts"><i class="fa fa-google-plus"></i></a>
		<a class="rss" href="http://scotch.local/feed"><i class="fa fa-rss"></i></a>
	</li></ul>
</div>


<div class="sub-menu" id="tutorials-sub-nav">
	<div class="offset" style="-webkit-transform: translate3d(0px, 200px, 0px) scale3d(1, 1, 1);">
		<span class="li_bulb"></span>
		<h3>Tutorials</h3>
		<ul>
			<li><a href="http://scotch.io/tag/css3">CSS</a></li>
			<li class="menu-header">Javascript
				<ul>
					<li><a href="http://scotch.io/tag/angular-js">AngularJS</a></li>
					<li><a href="http://scotch.io/tag/node-js">Node.js</a></li>
					<li><a href="http://scotch.io/tag/mean">MEAN</a></li>
				</ul>
			</li>
			<li class="menu-header">PHP
				<ul>
					<li><a href="http://scotch.io/tag/laravel">Laravel</a></li>
				</ul>
			</li>
			<li><a href="http://scotch.io/category/tutorials/social">Social</a></li>
			<li class="menu-header">Tools
				<ul>
					<li><a href="http://scotch.io/tag/editor">Editors</a></li>
				</ul>
			</li>
		</ul>
	</div>
</div>


<div id="main" class="clearfix">

	<div id="content" class="col">



	<article class="post-723 post type-post status-publish format-standard has-post-thumbnail hentry category-javascript tag-authentication tag-node-js article single" id="post-723">

		<a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#reader-mode" class="toggle-reader-mode"><i class="fa fa-arrows-alt"></i></a>

		<!-- FEATURED IMAGE -->
					<img width="1200" height="500" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-authentication-header.jpg" class="img-responsive wp-post-image" alt="node-authentication-header" id="article-main-image">		

	 	<!-- CATEGORY -->
	 	<div class="article-cat">
			<a href="http://scotch.io/category/tutorials/javascript" title="View all posts in Javascript" rel="category tag">Javascript</a>		</div>

	 	<!-- ARTICLE CONTENT -->
	 	<div class="article-content">

			<h1>Easy Node Authentication: Setup and Local</h1>
			<div class="byline">
				<span class="byline-item"><span class="li_user"></span> <a href="http://scotch.io/author/chris" title="Posts by Chris Sevilleja" rel="author">Chris Sevilleja</a></span>
				<span class="byline-item"><span class="li_calendar"></span> December 4, 2013</span>		
				<span class="byline-item"><span class="li_tag"></span> Â·<a href="http://scotch.io/tag/authentication" rel="tag">authentication</a>, <a href="http://scotch.io/tag/node-js" rel="tag">node.js</a></span>			
				<span class="byline-item">
					<span class="li_bubble"></span>
					<a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#disqus_thread" data-disqus-identifier="723 http://scotch.io/?p=723"><span class="dsq-postid" rel="723 http://scotch.io/?p=723">186 Comments</span></a>
				</span>								
			</div>

			
			<div class="share-buttons clearfix">
				<ul class="share-links list-inline">
					<li class="share-facebook">
	                    <a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#" onclick="
	                        window.open(
	                          &#39;https://www.facebook.com/sharer/sharer.php?u=&#39;+encodeURIComponent(location.href),
	                          &#39;facebook-share-dialog&#39;,
	                          &#39;width=626,height=436&#39;);
	                        return false;">
	                        <div class="social-number">161</div>
	                        <span class="fa fa-facebook sbg-facebook" style="-webkit-transform: rotate(2000deg);"></span>
	                      Share
	                    </a>
		            </li>
					<li class="share-twitter">
						<a href="https://twitter.com/intent/tweet?text=Easy+Node+Authentication%3A+Setup+and+Local&url=http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local&via=scotch_io&related=scotch_io">
							<div class="social-number">165</div>
							<span class="fa fa-twitter sbg-twitter" style="-webkit-transform: rotate(2000deg);"></span>
						Tweet</a>
					</li>
					<li class="share-googleplus">
						<a href="https://plus.google.com/share?url=http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local" onclick="javascript:window.open(this.href,&#39;&#39;, &#39;menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600&#39;);return false;">
						<div class="social-number">54</div>
							<span class="fa fa-google-plus sbg-google-plus" style="-webkit-transform: rotate(2000deg);"></span>
						Plus</a>
					</li>
				</ul>
			</div>

						<div class="action-buttons">
				<a class="btn btn-lg btn-warning" href="https://github.com/scotch-io/easy-node-authentication/tree/local" target="blank"><span class="fa fa-code"></span> View Code</a><a class="btn btn-lg btn-info" href="http://node-authentication.azurewebsites.net/" target="blank"><span class="fa fa-globe"></span> View Demo</a>			</div>

			<p>Authentication and logins in Node can be a complicated thing. Actually logging in for any application can be a pain. This article series will deal with authenticating in your Node application using the package <a href="http://passportjs.org/" target="blank">Passport</a>.</p>
<h3>What weâ€™ll be building:</h3>
<p>We will build an application that will have:</p>
<ul>
<li><strong>Local account logins</strong> and signups (using <a href="https://github.com/jaredhanson/passport-local" target="_blank">passport-local</a>)</li>
<li><strong>Facebook logins</strong> and registration (using <a href="https://github.com/jaredhanson/passport-facebook" target="_blank">passport-facebook</a>)</li>
<li><strong>Twitter logins</strong> and registration (using <a href="https://github.com/jaredhanson/passport-twitter" target="_blank">passport-twitter</a>)</li>
<li><strong>Google+ logins</strong> and registration (using oauth with <a href="https://github.com/jaredhanson/passport-google-oauth" target="_blank">passport-google-oauth</a>)</li>
<li>Require login for certain routes/sections of your application</li>
<li>Creating a password hash for local accounts (using <a href="https://github.com/shaneGirish/bcrypt-nodejs" target="_blank">bcrypt-nodejs</a>)</li>
<li>Displaying error messages (using flash with <a href="https://github.com/jaredhanson/connect-flash" target="_blank">connect-flash</a>. required since express 3.x)</li>
<li>Linking all social accounts under one user account</li>
<li>Allowing a user to unlink a specific social account</li>
</ul>
<h3>The Tutorial Series</h3>
<p>Weâ€™ll release this entire gigantic series over 5 different tutorials. They are:</p>
<ol>
<li>Getting Set up and Local Authentication</li>
<li>Facebook Authentication</li>
<li>Twitter Authentication</li>
<li>Google Authentication</li>
<li>Linking all accounts together</li>
</ol>
<p>Enough chit chat. Letâ€™s dive right into a completely blank Node application and build our entire application from scratch.</p>
<p>Hereâ€™s what weâ€™ll be building:</p>
<p><a href="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-authentication.jpg"><img src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-authentication.jpg" alt="node-authentication" width="1188" height="355" class="alignnone size-full wp-image-725 img-responsive img-thumbnail"></a></p>
<p>And after a user has logged in with all their credentials:</p>
<p><a href="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-authentication-profile1.jpg"><img src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-authentication-profile1.jpg" alt="node-authentication-profile" width="1181" height="711" class="alignnone size-full wp-image-728 img-thumbnail img-responsive"></a></p>
<p>For this article, weâ€™ll be focusing on setup and only local logins and registrations/signups. Since this is the first article and also deals with setting up our application, it will probably be one of the longer ones if not the longest. Sit tight for the duration of your flight.</p>
<h3>Setting Up Our Application</h3>
<p>To set up our base Node application, weâ€™ll need a few things. Weâ€™ll set up our <strong>npm packages</strong>, <strong>node application</strong>, <strong>configuration files</strong>, <strong>models</strong>, and <strong>routes</strong>.</p>
<h2 id="application-structure"><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#application-structure"><span class="heading-link fa fa-link"></span> Application Structure</a></h2>
<pre class="  language-markup"><code class="  language-markup">
	- app
	------ models
	---------- user.js 	<span class="token comment" spellcheck="true">&lt;!-- our user model --&gt;</span>
	------ routes.js 	<span class="token comment" spellcheck="true">&lt;!-- all the routes for our application --&gt;</span>
	- config
	------ auth.js 		<span class="token comment" spellcheck="true">&lt;!-- will hold all our client secret keys (facebook, twitter, google) --&gt;</span>
	------ database.js 	<span class="token comment" spellcheck="true">&lt;!-- will hold our database connection settings --&gt;</span>
	------ passport.js 	<span class="token comment" spellcheck="true">&lt;!-- configuring the strategies for passport --&gt;</span>
	- views
	------ index.ejs 	<span class="token comment" spellcheck="true">&lt;!-- show our home page with login links --&gt;</span>
	------ login.ejs 	<span class="token comment" spellcheck="true">&lt;!-- show our login form --&gt;</span>
	------ signup.ejs 	<span class="token comment" spellcheck="true">&lt;!-- show our signup form --&gt;</span>
	------ profile.ejs 	<span class="token comment" spellcheck="true">&lt;!-- after a user logs in, they will see their profile --&gt;</span>
	- package.json 		<span class="token comment" spellcheck="true">&lt;!-- handle our npm packages --&gt;</span>
	- server.js 		<span class="token comment" spellcheck="true">&lt;!-- setup our application --&gt;</span>
</code>
</pre>
<p>Go ahead and create all those files and folders and weâ€™ll fill them in as we go along.</p>
<h2 id="packages-package.json"><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#packages-package.json"><span class="heading-link fa fa-link"></span> Packages <small>package.json</small></a></h2>
<p>We are going to install all the packages needed for the entire tutorial series. This means weâ€™ll install all the packages needed for passport local, facebook, twitter, google, and the other things we need. Itâ€™s all commented out so you know what each does.</p>
<pre class="  language-javascript"><code class="  language-javascript"><span class="token comment" spellcheck="true">// package.json
</span>
<span class="token punctuation">{</span>
  <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"node-authentication"</span><span class="token punctuation">,</span>
  <span class="token string">"main"</span><span class="token punctuation">:</span> <span class="token string">"server.js"</span><span class="token punctuation">,</span>
  <span class="token string">"dependencies"</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span>
    <span class="token string">"express"</span> <span class="token punctuation">:</span> <span class="token string">"~3.4.4"</span><span class="token punctuation">,</span> 			
    <span class="token string">"ejs"</span> <span class="token punctuation">:</span> <span class="token string">"~0.8.5"</span><span class="token punctuation">,</span> 				
    <span class="token string">"mongoose"</span> <span class="token punctuation">:</span> <span class="token string">"~3.8.1"</span><span class="token punctuation">,</span> 			
    <span class="token string">"passport"</span> <span class="token punctuation">:</span> <span class="token string">"~0.1.17"</span><span class="token punctuation">,</span> 		
    <span class="token string">"passport-local"</span> <span class="token punctuation">:</span> <span class="token string">"~0.1.6"</span><span class="token punctuation">,</span> 	
    <span class="token string">"passport-facebook"</span> <span class="token punctuation">:</span> <span class="token string">"~1.0.2"</span><span class="token punctuation">,</span> 
    <span class="token string">"passport-twitter"</span> <span class="token punctuation">:</span> <span class="token string">"~1.0.2"</span><span class="token punctuation">,</span> 	
    <span class="token string">"passport-google-oauth"</span> <span class="token punctuation">:</span> <span class="token string">"~0.1.5"</span><span class="token punctuation">,</span>
    <span class="token string">"connect-flash"</span> <span class="token punctuation">:</span> <span class="token string">"~0.1.1"</span><span class="token punctuation">,</span> 	
    <span class="token string">"bcrypt-nodejs"</span> <span class="token punctuation">:</span> <span class="token string">"latest"</span> 		
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code>
</pre>
<p>Most of these are pretty self-explanatory. </p>
<ul>
<li><em>Express</em> is the framework. </li>
<li><em>Ejs</em> is the templating engine. </li>
<li><em>Mongoose</em> is object modeling for our MongoDB database. </li>
<li><em>Passport</em> stuff will help us authenticating with different methods. </li>
<li><em>Connect-flash</em> allows for passing session flashdata messages. </li>
<li><em>Bcrypt-nodejs</em> gives us the ability to hash the password. I use bcrypt-nodejs instead of bcrypt since it is easier to set up in windows.</li>
</ul>
<p>Now that we have all of our dependencies ready to go, letâ€™s go ahead and install them:</p>
<p><code>npm install</code></p>
<p>With all of our packages ready to go, letâ€™s set up our application in <code>server.js</code>.</p>
<h2 id="application-setup-server.js"><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#application-setup-server.js"><span class="heading-link fa fa-link"></span> Application Setup <small>server.js</small></a></h2>
<p>Letâ€™s make all our packages work together nicely. Our goal is to set up this file and try to have it bootstrap our entire application. Weâ€™d like to not go back into this file if it can be helped. This file will be the glue for our entire application.</p>
<pre class="  language-javascript"><code class="  language-javascript"><span class="token comment" spellcheck="true">// server.js
</span><span class="token comment" spellcheck="true">
// set up ======================================================================
</span><span class="token comment" spellcheck="true">// get all the tools we need
</span><span class="token keyword">var</span> express  <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> app      <span class="token operator">=</span> <span class="token function">express<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> port     <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>PORT <span class="token operator">||</span> <span class="token number">8080</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> mongoose <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">'mongoose'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> passport <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">'passport'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> flash 	 <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">'connect-flash'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> configDB <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">'./config/database.js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">
// configuration ===============================================================
</span>mongoose<span class="token punctuation">.</span><span class="token function">connect<span class="token punctuation">(</span></span>configDB<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // connect to our database
</span><span class="token comment" spellcheck="true">
// require('./config/passport')(passport); // pass passport for configuration
</span>
app<span class="token punctuation">.</span><span class="token function">configure<span class="token punctuation">(</span></span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token comment" spellcheck="true">	// set up our express application
</span>	app<span class="token punctuation">.</span><span class="token function">use<span class="token punctuation">(</span></span>express<span class="token punctuation">.</span><span class="token function">logger<span class="token punctuation">(</span></span><span class="token string">'dev'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // log every request to the console
</span>	app<span class="token punctuation">.</span><span class="token function">use<span class="token punctuation">(</span></span>express<span class="token punctuation">.</span><span class="token function">cookieParser<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // read cookies (needed for auth)
</span>	app<span class="token punctuation">.</span><span class="token function">use<span class="token punctuation">(</span></span>express<span class="token punctuation">.</span><span class="token function">bodyParser<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // get information from html forms
</span>
	app<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'view engine'</span><span class="token punctuation">,</span> <span class="token string">'ejs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // set up ejs for templating
</span>
<span class="token comment" spellcheck="true">	// required for passport
</span>	app<span class="token punctuation">.</span><span class="token function">use<span class="token punctuation">(</span></span>express<span class="token punctuation">.</span><span class="token function">session<span class="token punctuation">(</span></span><span class="token punctuation">{</span> secret<span class="token punctuation">:</span> <span class="token string">'ilovescotchscotchyscotchscotch'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // session secret
</span>	app<span class="token punctuation">.</span><span class="token function">use<span class="token punctuation">(</span></span>passport<span class="token punctuation">.</span><span class="token function">initialize<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	app<span class="token punctuation">.</span><span class="token function">use<span class="token punctuation">(</span></span>passport<span class="token punctuation">.</span><span class="token function">session<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // persistent login sessions
</span>	app<span class="token punctuation">.</span><span class="token function">use<span class="token punctuation">(</span></span><span class="token function">flash<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // use connect-flash for flash messages stored in session
</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">
// routes ======================================================================
</span><span class="token function">require<span class="token punctuation">(</span></span><span class="token string">'./app/routes.js'</span><span class="token punctuation">)</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> passport<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // load our routes and pass in our app and fully configured passport
</span><span class="token comment" spellcheck="true">
// launch ======================================================================
</span>app<span class="token punctuation">.</span><span class="token function">listen<span class="token punctuation">(</span></span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log<span class="token punctuation">(</span></span><span class="token string">'The magic happens on port '</span> <span class="token operator">+</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code>
</pre>
<p>We are going to comment out our passport configuration for now. Weâ€™ll uncomment it after we create that <code>config/passport.js</code> file.</p>
<p>The path of our <strong>passport</strong> object is important to note here. We will create it at the very beginning of the file with <code>var passport = require('passport');</code>. Then we pass it into our <code>config/passport.js</code> file for it to be configured. Then we pass it to the <code>app/routes.js</code> file for it to be used in our routes.</p>
<p>Now with this file, we have our application listening on <strong>port 8080</strong>. All we have to do to start up our server is:</p>
<p><code>node server.js</code></p>
<p>Then when we visit <strong>http://localhost:8080</strong> we will see our application. (Not really right this moment since we have some more set up to do)</p>
<div class="alert alert-info"><i class="icon-bolt"></i> <strong>Auto Refreshing:</strong> By default, node doesnâ€™t automatically refresh our server every time we change files. To do that weâ€™ll use <a href="https://github.com/remy/nodemon" class="alert-link" target="_blank">nodemon</a>. Just install with: <code>npm install -g nodemon</code> and use with: <code>nodemon server.js</code>.</div>
<p>Now this wonâ€™t do much for our application since we donâ€™t have our <strong>database configuration</strong>, <strong>routes</strong>, <strong>user model</strong>, or <strong>passport configuration</strong> set up. Letâ€™s do the database and routes now.</p>
<h2 id="database-config-config/database.js"><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#database-config-config/database.js"><span class="heading-link fa fa-link"></span> Database Config <small>config/database.js</small></a></h2>
<p>We already are calling this file in <code>server.js</code>. Now we just have to set it up.</p>
<pre class="  language-javascript"><code class="  language-javascript"><span class="token comment" spellcheck="true">// config/database.js
</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>

	<span class="token string">'url'</span> <span class="token punctuation">:</span> <span class="token string">'your-settings-here'</span><span class="token comment" spellcheck="true"> // looks like mongodb://&lt;user&gt;:&lt;pass&gt;@mongo.onmodulus.net:27017/Mikha4ot
</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code>
</pre>
<p>Fill this in with your own database. If you donâ€™t have a MongoDB database lying around, I would suggest going to <a href="https://modulus.io/" target="_blank">Modulus.io</a> and grabbing one. Once you sign up (and you get a $15 credit for signing up), you can create your database, grab its <strong>connection url</strong>, and place it in this file.</p>
<h2 id="routes-app/routes.js"><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#routes-app/routes.js"><span class="heading-link fa fa-link"></span> Routes <small>app/routes.js</small></a></h2>
<p>We will keep our routes simple for now. We will have the following routes:</p>
<ul>
<li>Home Page (/)</li>
<li>Login Page (/login)</li>
<li>Signup Page (/signup)</li>
<li>Handle the POST for both login</li>
<li>Handle the POST for both signup</li>
<li>Profile Page (after logged in)</li>
</ul>
<pre class="  language-javascript"><code class="  language-javascript"><span class="token comment" spellcheck="true">// app/routes.js
</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> passport<span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token comment" spellcheck="true">	// =====================================
</span><span class="token comment" spellcheck="true">	// HOME PAGE (with login links) ========
</span><span class="token comment" spellcheck="true">	// =====================================
</span>	app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		res<span class="token punctuation">.</span><span class="token function">render<span class="token punctuation">(</span></span><span class="token string">'index.ejs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // load the index.ejs file
</span>	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">	// =====================================
</span><span class="token comment" spellcheck="true">	// LOGIN ===============================
</span><span class="token comment" spellcheck="true">	// =====================================
</span><span class="token comment" spellcheck="true">	// show the login form
</span>	app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token comment" spellcheck="true">	// render the page and pass in any flash data if it exists
</span>		res<span class="token punctuation">.</span><span class="token function">render<span class="token punctuation">(</span></span><span class="token string">'login.ejs'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> message<span class="token punctuation">:</span> req<span class="token punctuation">.</span><span class="token function">flash<span class="token punctuation">(</span></span><span class="token string">'loginMessage'</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">	// process the login form
</span><span class="token comment" spellcheck="true">	// app.post('/login', do all our passport stuff here);
</span>
<span class="token comment" spellcheck="true">	// =====================================
</span><span class="token comment" spellcheck="true">	// SIGNUP ==============================
</span><span class="token comment" spellcheck="true">	// =====================================
</span><span class="token comment" spellcheck="true">	// show the signup form
</span>	app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/signup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token comment" spellcheck="true">	// render the page and pass in any flash data if it exists
</span>		res<span class="token punctuation">.</span><span class="token function">render<span class="token punctuation">(</span></span><span class="token string">'signup.ejs'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> message<span class="token punctuation">:</span> req<span class="token punctuation">.</span><span class="token function">flash<span class="token punctuation">(</span></span><span class="token string">'signupMessage'</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">	// process the signup form
</span><span class="token comment" spellcheck="true">	// app.post('/signup', do all our passport stuff here);
</span>
<span class="token comment" spellcheck="true">	// =====================================
</span><span class="token comment" spellcheck="true">	// PROFILE SECTION =====================
</span><span class="token comment" spellcheck="true">	// =====================================
</span><span class="token comment" spellcheck="true">	// we will want this protected so you have to be logged in to visit
</span><span class="token comment" spellcheck="true">	// we will use route middleware to verify this (the isLoggedIn function)
</span>	app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/profile'</span><span class="token punctuation">,</span> isLoggedIn<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		res<span class="token punctuation">.</span><span class="token function">render<span class="token punctuation">(</span></span><span class="token string">'profile.ejs'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
			user <span class="token punctuation">:</span> req<span class="token punctuation">.</span>user<span class="token comment" spellcheck="true"> // get the user out of session and pass to template
</span>		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">	// =====================================
</span><span class="token comment" spellcheck="true">	// LOGOUT ==============================
</span><span class="token comment" spellcheck="true">	// =====================================
</span>	app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/logout'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		req<span class="token punctuation">.</span><span class="token function">logout<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		res<span class="token punctuation">.</span><span class="token function">redirect<span class="token punctuation">(</span></span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">
// route middleware to make sure a user is logged in
</span><span class="token keyword">function</span> <span class="token function">isLoggedIn<span class="token punctuation">(</span></span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token comment" spellcheck="true">	// if user is authenticated in the session, carry on 
</span>	<span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">isAuthenticated<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span> <span class="token function">next<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">	// if they aren't redirect them to the home page
</span>	res<span class="token punctuation">.</span><span class="token function">redirect<span class="token punctuation">(</span></span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code>
</pre>
<p><strong>app.post</strong>: For now, we will comment out the routes for handling the form POST. We do this since passport isnâ€™t set up yet.</p>
<p><strong>req.flash</strong>: This is the connect-flash way of getting flashdata in the session. We will create the <code>loginMessage</code> inside our passport configuration.</p>
<p><strong>isLoggedIn</strong>: Using <strong>route middleware</strong>, we can protect the profile section route. A user has to be logged in to access that route. Using the <code>isLoggedIn</code> function, we will kick a user back to the home page if they try to access <code>http://localhost:8080/profile</code> and they are <strong>not logged in</strong>.</p>
<p><strong>Logout</strong>: We will handle logout by using <code>req.logout()</code> provided by passport. After logging out, redirect the user to the home page.</p>
<p>With our server running, we can visit our application in our browser at <strong>http://localhost:8080</strong>. Once again, we wonâ€™t see much since we havenâ€™t made our <strong>views</strong>. Letâ€™s go do that now. (Weâ€™re almost to the authentication stuff, I promise).</p>
<h2 id="views-views/index.ejs,-views/login.ejs,-views/signup.ejs"><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#views-views/index.ejs,-views/login.ejs,-views/signup.ejs"><span class="heading-link fa fa-link"></span> Views <small>views/index.ejs, views/login.ejs, views/signup.ejs</small></a></h2>
<p>Here weâ€™ll define our views for our <strong>home page</strong>, <strong>login page</strong>, and <strong>signup/registration page</strong>.</p>
<h3>Home Page <small>views/index.ejs</small></h3>
<p>Our home page will just show links to all our forms of authentication.</p>
<pre class="  language-markup"><code class="  language-markup"><span class="token comment" spellcheck="true">&lt;!-- views/index.ejs --&gt;</span>
&lt;!doctype html&gt;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Node Authentication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment" spellcheck="true">&lt;!-- load bootstrap css --&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment" spellcheck="true">&lt;!-- load fontawesome --&gt;</span>
	<span class="token style"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span>
		<span class="token selector">body 		</span><span class="token punctuation">{</span> <span class="token property">padding-top</span><span class="token punctuation">:</span>80px<span class="token punctuation">;</span> <span class="token punctuation">}</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jumbotron text-center<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-lock<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span> Node Authentication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>

		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Login or Register with:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/login<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-user<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span> Local Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/signup<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-user<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span> Local Signup<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code>
</pre>
<p>Now if we visit our app in our browser, weâ€™ll have a site that looks like this:</p>
<p><a href="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-authentication-local.jpg"><img src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-authentication-local.jpg" alt="node-authentication-local" width="1187" height="316" class="alignnone size-full wp-image-731 img-thumbnail img-responsive"></a></p>
<p>Here are the views for our login and signup pages also.</p>
<h3>Login Form <small>views/login.ejs</small></h3>
<pre class="  language-markup"><code class="  language-markup"><span class="token comment" spellcheck="true">&lt;!-- views/login.ejs --&gt;</span>
&lt;!doctype html&gt;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Node Authentication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment" spellcheck="true">&lt;!-- load bootstrap css --&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment" spellcheck="true">&lt;!-- load fontawesome --&gt;</span>
	<span class="token style"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span>
		<span class="token selector">body 		</span><span class="token punctuation">{</span> <span class="token property">padding-top</span><span class="token punctuation">:</span>80px<span class="token punctuation">;</span> <span class="token punctuation">}</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-6 col-sm-offset-3<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-sign-in<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span> Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>

	<span class="token comment" spellcheck="true">&lt;!-- show any messages that come back with authentication --&gt;</span>
	&lt;% if (message.length &gt; 0) { %&gt;
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert alert-danger<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>&lt;%= message %&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
	&lt;% } %&gt;

	<span class="token comment" spellcheck="true">&lt;!-- LOGIN FORM --&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/login<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Email<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Password<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-warning btn-lg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Need an account? <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/signup<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Signup<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Or go <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code>
</pre>
<p><a href="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-auth-local-login.jpg"><img src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-auth-local-login.jpg" alt="node-auth-local-login" width="600" height="400" class="alignnone size-full wp-image-732 img-thumbnail img-responsive"></a></p>
<h3>Signup Form <small>views/signup.ejs</small></h3>
<pre class="  language-markup"><code class="  language-markup"><span class="token comment" spellcheck="true">&lt;!-- views/signup.ejs --&gt;</span>
&lt;!doctype html&gt;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Node Authentication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment" spellcheck="true">&lt;!-- load bootstrap css --&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment" spellcheck="true">&lt;!-- load fontawesome --&gt;</span>
	<span class="token style"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span>
		<span class="token selector">body 		</span><span class="token punctuation">{</span> <span class="token property">padding-top</span><span class="token punctuation">:</span>80px<span class="token punctuation">;</span> <span class="token punctuation">}</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-6 col-sm-offset-3<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-sign-in<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span> Signup<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>

	<span class="token comment" spellcheck="true">&lt;!-- show any messages that come back with authentication --&gt;</span>
	&lt;% if (message.length &gt; 0) { %&gt;
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert alert-danger<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>&lt;%= message %&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
	&lt;% } %&gt;

	<span class="token comment" spellcheck="true">&lt;!-- LOGIN FORM --&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/signup<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Email<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Password<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-warning btn-lg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Signup<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Already have an account? <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/login<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Or go <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code>
</pre>
<p><a href="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-auth-local-signup.jpg"><img src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-auth-local-signup.jpg" alt="node-auth-local-signup" width="600" height="400" class="alignnone size-full wp-image-733 img-thumbnail img-responsive"></a></p>
<h3>Authenticating With Passport Locally</h3>
<p>Finally! We have finally set up our application and have gotten to the authentication part. Donâ€™t worry. The rest of the authentication articles in this tutorial series will use the same base so we wonâ€™t have to set up our application again.</p>
<p>So far we have <strong>installed our packages</strong>, <strong>set up our application</strong>, <strong>connected to our database</strong>, <strong>created our routes</strong>, and <strong>created our views</strong>.</p>
<p>Now we will create our <strong>user model</strong>, <strong>configure passport for local authentication</strong>, and use our configured passport to <strong>process our login/signup forms</strong>.</p>
<h2 id="user-model"><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#user-model"><span class="heading-link fa fa-link"></span> User Model</a></h2>
<p>We will create our user model for the entire tutorial series. Our user will have the ability to be linked to multiple social accounts and to a local account. For local accounts, we will be keeping <strong>email</strong> and <strong>password</strong>. For the social accounts, we will be keeping their <strong>id</strong>, <strong>token</strong>, and some user information.</p>
<p>You can change these fields out to be whatever you want. You can authenticate locally using username and password (passport-local actually uses username by default but weâ€™ll change that to email).</p>
<pre class="  language-javascript"><code class="  language-javascript"><span class="token comment" spellcheck="true">// app/models/user.js
</span><span class="token comment" spellcheck="true">// load the things we need
</span><span class="token keyword">var</span> mongoose <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">'mongoose'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> bcrypt   <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">'bcrypt-nodejs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">
// define the schema for our user model
</span><span class="token keyword">var</span> userSchema <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">Schema<span class="token punctuation">(</span></span><span class="token punctuation">{</span>

    local            <span class="token punctuation">:</span> <span class="token punctuation">{</span>
        email        <span class="token punctuation">:</span> String<span class="token punctuation">,</span>
        password     <span class="token punctuation">:</span> String<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    facebook         <span class="token punctuation">:</span> <span class="token punctuation">{</span>
        id           <span class="token punctuation">:</span> String<span class="token punctuation">,</span>
        token        <span class="token punctuation">:</span> String<span class="token punctuation">,</span>
        email        <span class="token punctuation">:</span> String<span class="token punctuation">,</span>
        name         <span class="token punctuation">:</span> String
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    twitter          <span class="token punctuation">:</span> <span class="token punctuation">{</span>
        id           <span class="token punctuation">:</span> String<span class="token punctuation">,</span>
        token        <span class="token punctuation">:</span> String<span class="token punctuation">,</span>
        displayName  <span class="token punctuation">:</span> String<span class="token punctuation">,</span>
        username     <span class="token punctuation">:</span> String
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    google           <span class="token punctuation">:</span> <span class="token punctuation">{</span>
        id           <span class="token punctuation">:</span> String<span class="token punctuation">,</span>
        token        <span class="token punctuation">:</span> String<span class="token punctuation">,</span>
        email        <span class="token punctuation">:</span> String<span class="token punctuation">,</span>
        name         <span class="token punctuation">:</span> String
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">
// methods ======================
</span><span class="token comment" spellcheck="true">// generating a hash
</span>userSchema<span class="token punctuation">.</span>methods<span class="token punctuation">.</span>generateHash <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> bcrypt<span class="token punctuation">.</span><span class="token function">hashSync<span class="token punctuation">(</span></span>password<span class="token punctuation">,</span> bcrypt<span class="token punctuation">.</span><span class="token function">genSaltSync<span class="token punctuation">(</span></span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">
// checking if password is valid
</span>userSchema<span class="token punctuation">.</span>methods<span class="token punctuation">.</span>validPassword <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> bcrypt<span class="token punctuation">.</span><span class="token function">compareSync<span class="token punctuation">(</span></span>password<span class="token punctuation">,</span> this<span class="token punctuation">.</span>local<span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">
// create the model for users and expose it to our app
</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model<span class="token punctuation">(</span></span><span class="token string">'User'</span><span class="token punctuation">,</span> userSchema<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code>
</pre>
<p>Our model is done. We will be hashing our password within our user model before it saves to the database. This means we donâ€™t have to deal with generating the hash ourselves. It is all handled nicely and neatly inside our user model.</p>
<p>Letâ€™s move onto the important stuff of this article: <strong>authenticating locally</strong>!</p>
<h3>Configuring Passport for Local Accounts</h3>
<p>All the configuration for passport will be handled in <code>config/passport.js</code>. We want to keep this code in its own file away from our other main files like routes or the server file. I have seen some implementations where passport will be configured in random places. I believe having it in this config file will keep your overall application clean and concise.</p>
<p>So far, we created our passport object in <code>server.js</code>, and then we pass it to our <code>config/passport.js</code> file. This is where we configure our <strong>Strategy</strong> for local, facebook, twitter, and google. This is also the file where we will create the <code>serializeUser</code> and <code>deserializeUser</code> functions to store our user in session.</p>
<p>I would highly recommend going to read the <a href="http://passportjs.org/guide/" target="_blank">passport docs</a> to understand more about how the package works.</p>
<h2 id="handling-signup/registration"><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#handling-signup/registration"><span class="heading-link fa fa-link"></span> Handling Signup/Registration</a></h2>
<p>We will be handling login and signup in <code>config/passport.js</code>. Letâ€™s look at signup first.</p>
<pre class="  language-javascript"><code class="  language-javascript"><span class="token comment" spellcheck="true">// config/passport.js
</span><span class="token comment" spellcheck="true">
// load all the things we need
</span><span class="token keyword">var</span> LocalStrategy   <span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">'passport-local'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Strategy<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">
// load up the user model
</span><span class="token keyword">var</span> User       		<span class="token operator">=</span> <span class="token function">require<span class="token punctuation">(</span></span><span class="token string">'../app/models/user'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">
// expose this function to our app using module.exports
</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>passport<span class="token punctuation">)</span> <span class="token punctuation">{</span>

   <span class="token comment" spellcheck="true"> // =========================================================================
</span>   <span class="token comment" spellcheck="true"> // passport session setup ==================================================
</span>   <span class="token comment" spellcheck="true"> // =========================================================================
</span>   <span class="token comment" spellcheck="true"> // required for persistent login sessions
</span>   <span class="token comment" spellcheck="true"> // passport needs ability to serialize and unserialize users out of session
</span>
   <span class="token comment" spellcheck="true"> // used to serialize the user for the session
</span>    passport<span class="token punctuation">.</span><span class="token function">serializeUser<span class="token punctuation">(</span></span><span class="token keyword">function</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">done<span class="token punctuation">(</span></span><span class="token keyword">null</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment" spellcheck="true"> // used to deserialize the user
</span>    passport<span class="token punctuation">.</span><span class="token function">deserializeUser<span class="token punctuation">(</span></span><span class="token keyword">function</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        User<span class="token punctuation">.</span><span class="token function">findById<span class="token punctuation">(</span></span>id<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">done<span class="token punctuation">(</span></span>err<span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token comment" spellcheck="true">	// =========================================================================
</span>   <span class="token comment" spellcheck="true"> // LOCAL SIGNUP ============================================================
</span>   <span class="token comment" spellcheck="true"> // =========================================================================
</span>   <span class="token comment" spellcheck="true"> // we are using named strategies since we have one for login and one for signup
</span><span class="token comment" spellcheck="true">	// by default, if there was no name, it would just be called 'local'
</span>
    passport<span class="token punctuation">.</span><span class="token function">use<span class="token punctuation">(</span></span><span class="token string">'local-signup'</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LocalStrategy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
       <span class="token comment" spellcheck="true"> // by default, local strategy uses username and password, we will override with email
</span>        usernameField <span class="token punctuation">:</span> <span class="token string">'email'</span><span class="token punctuation">,</span>
        passwordField <span class="token punctuation">:</span> <span class="token string">'password'</span><span class="token punctuation">,</span>
        passReqToCallback <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true"> // allows us to pass back the entire request to the callback
</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> email<span class="token punctuation">,</span> password<span class="token punctuation">,</span> done<span class="token punctuation">)</span> <span class="token punctuation">{</span>

       <span class="token comment" spellcheck="true"> // asynchronous
</span>       <span class="token comment" spellcheck="true"> // User.findOne wont fire unless data is sent back
</span>        process<span class="token punctuation">.</span><span class="token function">nextTick<span class="token punctuation">(</span></span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token comment" spellcheck="true">	// find a user whose email is the same as the forms email
</span>	<span class="token comment" spellcheck="true">	// we are checking to see if the user trying to login already exists
</span>        User<span class="token punctuation">.</span><span class="token function">findOne<span class="token punctuation">(</span></span><span class="token punctuation">{</span> <span class="token string">'local.email'</span> <span class="token punctuation">:</span>  email <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token comment" spellcheck="true"> // if there are any errors, return the error
</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token function">done<span class="token punctuation">(</span></span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment" spellcheck="true"> // check to see if theres already a user with that email
</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">done<span class="token punctuation">(</span></span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">flash<span class="token punctuation">(</span></span><span class="token string">'signupMessage'</span><span class="token punctuation">,</span> <span class="token string">'That email is already taken.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>

			<span class="token comment" spellcheck="true">	// if there is no user with that email
</span>               <span class="token comment" spellcheck="true"> // create the user
</span>                <span class="token keyword">var</span> newUser            <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

               <span class="token comment" spellcheck="true"> // set the user's local credentials
</span>                newUser<span class="token punctuation">.</span>local<span class="token punctuation">.</span>email    <span class="token operator">=</span> email<span class="token punctuation">;</span>
                newUser<span class="token punctuation">.</span>local<span class="token punctuation">.</span>password <span class="token operator">=</span> newUser<span class="token punctuation">.</span><span class="token function">generateHash<span class="token punctuation">(</span></span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment" spellcheck="true">	// save the user
</span>                newUser<span class="token punctuation">.</span><span class="token function">save<span class="token punctuation">(</span></span><span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                        <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token function">done<span class="token punctuation">(</span></span><span class="token keyword">null</span><span class="token punctuation">,</span> newUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    

        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code>
</pre>
<p>We have now provided a strategy to passport called <strong>local-signup</strong>. We will use this strategy to process our signup form. Letâ€™s open up our <code>app/routes.js</code> and handle the POST for our signup form.</p>
<pre class="  language-javascript"><code class="  language-javascript"><span class="token comment" spellcheck="true">// app/routes.js
</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token comment" spellcheck="true">	// process the signup form
</span>	app<span class="token punctuation">.</span><span class="token function">post<span class="token punctuation">(</span></span><span class="token string">'/signup'</span><span class="token punctuation">,</span> passport<span class="token punctuation">.</span><span class="token function">authenticate<span class="token punctuation">(</span></span><span class="token string">'local-signup'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
		successRedirect <span class="token punctuation">:</span> <span class="token string">'/profile'</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true"> // redirect to the secure profile section
</span>		failureRedirect <span class="token punctuation">:</span> <span class="token string">'/signup'</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true"> // redirect back to the signup page if there is an error
</span>		failureFlash <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true"> // allow flash messages
</span>	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code>
</pre>
<p>Thatâ€™s all the code we need for the route. All of the heavy duty stuff lives inside of <code>config/passport.js</code>. All we have to set here is where our failures and successes get redirected. Super clean.</p>
<p>There is also much more you can do with this. Instead of specifying a <code>successRedirect</code>, you could use a callback and take more control over how your application works. Here is a great <a href="http://stackoverflow.com/questions/15711127/express-passport-node-js-error-handling" target="_blank">stackoverflow answer</a> on error handling. It explains how to use <code>done()</code> and how to be more specific with your handling of a route.</p>
<h3>Testing Signup</h3>
<p>With our passport config finally laid out, we can uncomment that line in our <code>server.js</code>. This will load our config and then we can use our signup form.</p>
<pre class="  language-javascript"><code class="  language-javascript"><span class="token comment" spellcheck="true">// server.js
</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token comment" spellcheck="true">	// uncomment this line
</span>	<span class="token function">require<span class="token punctuation">(</span></span><span class="token string">'./config/passport'</span><span class="token punctuation">)</span><span class="token punctuation">(</span>passport<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // pass passport for configuration
</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code>
</pre>
<p>Now that we have passport, our routes, and our redirects in place, letâ€™s go ahead and test our signup form. In your browser, go to <strong>http://localhost:8080/signup</strong> and fill out your form.</p>
<p>If all goes according to plan, you should be <strong>logged in</strong>, your user <strong>saved in the session</strong>, and you are <strong>redirected to the /profile page</strong> (the profile page will show nothing right now since we havenâ€™t defined that view).</p>
<p>If we look in our database, weâ€™ll also see our user sitting there cozily with all the credentials we created for him.</p>
<p><a href="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-user-in-database.jpg"><img src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-user-in-database.jpg" alt="node-user-in-database" width="738" height="146" class="alignnone size-full wp-image-740 img-responsive img-thumbnail"></a></p>
<div class="alert alert-info"><i class="icon-bolt"></i> <strong>Exploring Your Database</strong>: I use <a href="http://robomongo.org/" class="alert-link" target="_blank">Robomongo</a> to see whatâ€™s in my database. Just download it and connect to your database to see your new users after they signup!</div>
<p>With users able to sign up, letâ€™s give them a way to login.</p>
<h2 id="login"><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#login"><span class="heading-link fa fa-link"></span> Login</a></h2>
<p>This will be very similar to the signup strategy. Weâ€™ll add the strategy to our <code>config/passport.js</code> and the route in <code>app/routes.js</code>.</p>
<pre class="  language-javascript"><code class="  language-javascript"><span class="token comment" spellcheck="true">// config/passport.js
</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

   <span class="token comment" spellcheck="true"> // =========================================================================
</span>   <span class="token comment" spellcheck="true"> // LOCAL LOGIN =============================================================
</span>   <span class="token comment" spellcheck="true"> // =========================================================================
</span><span class="token comment" spellcheck="true">	// we are using named strategies since we have one for login and one for signup
</span><span class="token comment" spellcheck="true">	// by default, if there was no name, it would just be called 'local'
</span>
    passport<span class="token punctuation">.</span><span class="token function">use<span class="token punctuation">(</span></span><span class="token string">'local-login'</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LocalStrategy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
       <span class="token comment" spellcheck="true"> // by default, local strategy uses username and password, we will override with email
</span>        usernameField <span class="token punctuation">:</span> <span class="token string">'email'</span><span class="token punctuation">,</span>
        passwordField <span class="token punctuation">:</span> <span class="token string">'password'</span><span class="token punctuation">,</span>
        passReqToCallback <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true"> // allows us to pass back the entire request to the callback
</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> email<span class="token punctuation">,</span> password<span class="token punctuation">,</span> done<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true"> // callback with email and password from our form
</span>
	<span class="token comment" spellcheck="true">	// find a user whose email is the same as the forms email
</span>	<span class="token comment" spellcheck="true">	// we are checking to see if the user trying to login already exists
</span>        User<span class="token punctuation">.</span><span class="token function">findOne<span class="token punctuation">(</span></span><span class="token punctuation">{</span> <span class="token string">'local.email'</span> <span class="token punctuation">:</span>  email <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token comment" spellcheck="true"> // if there are any errors, return the error before anything else
</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token function">done<span class="token punctuation">(</span></span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>

           <span class="token comment" spellcheck="true"> // if no user is found, return the message
</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token function">done<span class="token punctuation">(</span></span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">flash<span class="token punctuation">(</span></span><span class="token string">'loginMessage'</span><span class="token punctuation">,</span> <span class="token string">'No user found.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // req.flash is the way to set flashdata using connect-flash
</span>
		<span class="token comment" spellcheck="true">	// if the user is found but the password is wrong
</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">.</span><span class="token function">validPassword<span class="token punctuation">(</span></span>password<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token function">done<span class="token punctuation">(</span></span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">flash<span class="token punctuation">(</span></span><span class="token string">'loginMessage'</span><span class="token punctuation">,</span> <span class="token string">'Oops! Wrong password.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // create the loginMessage and save it to session as flashdata
</span>
           <span class="token comment" spellcheck="true"> // all is well, return successful user
</span>            <span class="token keyword">return</span> <span class="token function">done<span class="token punctuation">(</span></span><span class="token keyword">null</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code>
</pre>
<p>We have now provided a strategy to passport called <strong>local-login</strong>. We will use this strategy to process our login form. We can check if a user exists, if the password is wrong, and set flash data to show error messages. Letâ€™s open up our <code>app/routes.js</code> and handle the POST for our login form.</p>
<pre class="  language-javascript"><code class="  language-javascript"><span class="token comment" spellcheck="true">// app/routes.js
</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token comment" spellcheck="true">	// process the login form
</span>	app<span class="token punctuation">.</span><span class="token function">post<span class="token punctuation">(</span></span><span class="token string">'/login'</span><span class="token punctuation">,</span> passport<span class="token punctuation">.</span><span class="token function">authenticate<span class="token punctuation">(</span></span><span class="token string">'local-login'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
		successRedirect <span class="token punctuation">:</span> <span class="token string">'/profile'</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true"> // redirect to the secure profile section
</span>		failureRedirect <span class="token punctuation">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true"> // redirect back to the signup page if there is an error
</span>		failureFlash <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true"> // allow flash messages
</span>	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code>
</pre>
<p>If you try to login with a user email that doesnâ€™t exist in our database, you will see the error. Same goes for if your password is wrong.</p>
<p><a href="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-auth-login-error.jpg"><img src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-auth-login-error.jpg" alt="node-auth-login-error" width="618" height="469" class="alignnone size-full wp-image-742 img-thumbnail img-responsive"></a></p>
<h2 id="displaying-user-and-secure-profile-page-views/profile.ejs"><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#displaying-user-and-secure-profile-page-views/profile.ejs"><span class="heading-link fa fa-link"></span> Displaying User and Secure Profile Page <small>views/profile.ejs</small></a></h2>
<p>Now we have functional signup and login forms. If a user is successful in authenticating they will be redirected to the profile page. If they are not successful, they will go home. The last thing we need to do is make our profile page so that those that are lucky enough to signup (all of us?) will have an exclusive place of our site all to themselves.</p>
<pre class="  language-markup"><code class="  language-markup"><span class="token comment" spellcheck="true">&lt;!-- views/profile.ejs --&gt;</span>
&lt;!doctype html&gt;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Node Authentication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token style"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span>
		<span class="token selector">body 		</span><span class="token punctuation">{</span> <span class="token property">padding-top</span><span class="token punctuation">:</span>80px<span class="token punctuation">;</span> <span class="token property">word-wrap</span><span class="token punctuation">:</span>break-word<span class="token punctuation">;</span> <span class="token punctuation">}</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>page-header text-center<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-anchor<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span> Profile Page<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/logout<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default btn-sm<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Logout<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>

		<span class="token comment" spellcheck="true">&lt;!-- LOCAL INFORMATION --&gt;</span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-6<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>well<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-user<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span> Local<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>

					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span>: &lt;%= user._id %&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>email<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span>: &lt;%= user.local.email %&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>password<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span>: &lt;%= user.local.password %&gt;
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code>
</pre>
<p>After a user logs in, they can see all their information. It is grabbed from the session and passed to our view in the <code>app/routes.js</code> file. We will also provide a link to logout.</p>
<p><a href="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-auth-local-profile-page.jpg"><img src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-auth-local-profile-page.jpg" alt="node-auth-local-profile-page" width="1178" height="409" class="alignnone size-full wp-image-744 img-responsive img-thumbnail"></a></p>
<h2 id="conclusion"><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#conclusion"><span class="heading-link fa fa-link"></span> Conclusion</a></h2>
<p>There you have it! Weâ€™ve built a brand new application from scratch and have the ability to let users signup/register and login. We even have support for flash messages, hashing passwords, and requiring login for some sections of our site using route middleware.</p>
<p>Coming up next weâ€™ll be looking at how to take this same structure, and use passport to authenticate with Facebook, Twitter, and Google. After that weâ€™ll look at how we can get all these thing working together in the same application. Users will be able to login with one type of account, and then link their other accounts.</p>
<p>As always, if you see any ways to improve this or need any clarification, sound off in the comments and weâ€™ll respond pretty close to immediatelyâ€¦ pretty close.</p>
<div class="alert alert-info">
<strong>Edit #1</strong>: Changed password hashing to be handled inside user model and asynchronously.<br>
<strong>Edit #2</strong>: Changed password hashing to be explicitly called. Helps with future tutorials.
</div>
<div class="alert alert-success">This article is part of our <a href="http://scotch.io/series/easy-node-authentication" class="alert-link">Easy Node Authentication</a> series.<p></p>
<ul>
<li>Getting Started and Local Authentication</li>
<li><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-facebook" class="alert-link">Facebook</a></li>
<li><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-twitter" class="alert-link">Twitter</a></li>
<li><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-google" class="alert-link">Google</a></li>
<li><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-linking-all-accounts-together" class="alert-link">Linking All Accounts Together</a></li>
</ul>
</div>

			<div class="action-buttons">
				<a class="btn btn-lg btn-warning" href="https://github.com/scotch-io/easy-node-authentication/tree/local" target="_blank"><span class="fa fa-code"></span> View Code</a><a class="btn btn-lg btn-info" href="http://node-authentication.azurewebsites.net/" target="_blank"><span class="fa fa-globe"></span> View Demo</a>			</div>

			<div class="share-buttons clearfix">
				<ul class="share-links list-inline">
					<li class="share-facebook">
	                    <a href="http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local#" onclick="
	                        window.open(
	                          &#39;https://www.facebook.com/sharer/sharer.php?u=&#39;+encodeURIComponent(location.href),
	                          &#39;facebook-share-dialog&#39;,
	                          &#39;width=626,height=436&#39;);
	                        return false;">
	                        <div class="social-number">161</div>
	                        <span class="fa fa-facebook sbg-facebook" style="-webkit-transform: rotate(2000deg);"></span>
	                      Share
	                    </a>
		            </li>
					<li class="share-twitter">
						<a href="https://twitter.com/intent/tweet?text=Easy+Node+Authentication%3A+Setup+and+Local&url=http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local&via=scotch_io&related=scotch_io">
							<div class="social-number">165</div>
							<span class="fa fa-twitter sbg-twitter" style="-webkit-transform: rotate(2000deg);"></span>
						Tweet</a>
					</li>
					<li class="share-googleplus">
						<a href="https://plus.google.com/share?url=http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local" onclick="javascript:window.open(this.href,&#39;&#39;, &#39;menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600&#39;);return false;">
						<div class="social-number">54</div>
							<span class="fa fa-google-plus sbg-google-plus" style="-webkit-transform: rotate(2000deg);"></span>
						Plus</a>
					</li>
				</ul>
			</div>

		</div>
	</article>

	<div id="article-secondary">
		<div id="related-articles" class="text-center">
			<div class="yarpp-related">

<h3>Related Articles</h3>

<div class="row">

	
	<div class="col-sm-4">
					<a href="http://scotch.io/tutorials/javascript/easy-node-authentication-facebook"><img width="600" height="250" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-authentication-facebook-600x250.jpg" class="img-responsive img-thumbnail wp-post-image" alt="node-authentication-facebook"></a>
		
		<p><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-facebook">Easy Node Authentication: Facebook</a></p>
	</div>

	
	<div class="col-sm-4">
					<a href="http://scotch.io/tutorials/javascript/easy-node-authentication-twitter"><img width="600" height="250" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-auth-twitter-banner-600x250.jpg" class="img-responsive img-thumbnail wp-post-image" alt="node-auth-twitter-banner"></a>
		
		<p><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-twitter">Easy Node Authentication: Twitter</a></p>
	</div>

	
	<div class="col-sm-4">
					<a href="http://scotch.io/tutorials/javascript/easy-node-authentication-linking-all-accounts-together"><img width="600" height="250" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-authentication-all-600x250.jpg" class="img-responsive img-thumbnail wp-post-image" alt="node-authentication-all"></a>
		
		<p><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-linking-all-accounts-together">Easy Node Authentication: Linking All Accounts Together</a></p>
	</div>

	
	<div class="col-sm-4">
					<a href="http://scotch.io/tutorials/javascript/easy-node-authentication-google"><img width="600" height="250" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-authentication-google-banner-600x250.jpg" class="img-responsive img-thumbnail wp-post-image" alt="node-authentication-google-banner"></a>
		
		<p><a href="http://scotch.io/tutorials/javascript/easy-node-authentication-google">Easy Node Authentication: Google</a></p>
	</div>

	
	<div class="col-sm-4">
					<a href="http://scotch.io/tutorials/simple-and-easy-laravel-login-authentication"><img width="600" height="250" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/laravel-login-600x250.jpg" class="img-responsive img-thumbnail wp-post-image" alt="laravel-login"></a>
		
		<p><a href="http://scotch.io/tutorials/simple-and-easy-laravel-login-authentication">Simple and Easy Laravel Login Authentication</a></p>
	</div>

	
	<div class="col-sm-4">
					<a href="http://scotch.io/tutorials/how-to-setup-ssh-public-key-authentication"><img width="600" height="250" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/key-600x250.jpg" class="img-responsive img-thumbnail wp-post-image" alt="key"></a>
		
		<p><a href="http://scotch.io/tutorials/how-to-setup-ssh-public-key-authentication">How to Setup SSH Public-Key Authentication</a></p>
	</div>

	    <script type="text/javascript">
    // <![CDATA[
        var disqus_shortname = 'scotchwebdevelopment';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + 'disqus.com/forums/' + disqus_shortname + '/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
    //]]>
    </script>

</div>
</div>
	 	</div>

		<div id="author-info">
			<div class="row">
				<div class="col-sm-4">
					<img alt="" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/8a8bf3a2c952984defbd6bb48304b38e" class="avatar img-responsive img-thumbnail avatar-175 photo" height="175" width="175">				</div>
				<div class="col-sm-8">
					<h3><a href="http://scotch.io/author/chris" title="Posts by Chris Sevilleja" rel="author">Chris Sevilleja</a></h3>

					<p>Design, development, and anything in between that I find interesting.</p>

					<a id="view-contributions" class="btn btn-info btn-sm" href="http://scotch.io/author/chris">
						<span class="fa fa-heart"></span> View My Contributions
					</a>
				
					<ul id="author-links" class="list-unstyled text-center">
						<li id="twitter-link">
							<a class="sbg-twitter" href="http://twitter.com/sevilayha">
								<span class="fa fa-twitter"></span>
							</a>
						</li>
						<li id="google-link">
							<a class="sbg-google-plus" href="https://plus.google.com/u/0/111211028394313645953">
								<span class="fa fa-google-plus"></span>
							</a>
					</li></ul>
				</div>
			</div>
		</div>

		<div id="stay-connected" class="text-center">
			<h3>Stay Connected With Us <br><small>hover these for magic</small></h3>

			<div id="connected-rss" class="connected-container">
				<a class="share-rss sbg-rss" href="http://scotch.io/feed">
					<div class="connected-cover sbg-rss"><span class="fa fa-rss"></span> Subscribe</div>
				</a>
			</div>
			<div id="connected-twitter" class="connected-container">
				<a class="sbg-twitter" href="http://twitter.com/scotch_io"> 
					<div class="connected-cover sbg-twitter"><span class="fa fa-twitter"></span> Follow</div>
					</a><div class="connected-action sbg-twitter"><a class="sbg-twitter" href="http://twitter.com/scotch_io">
					</a><a href="https://twitter.com/scotch_io" class="twitter-follow-button" data-show-count="false" data-show-screen-name="false" data-size="large" style="display: block;"><iframe style="width: 30px; height: 19px; border: 0px;"></iframe></a>
					</div>
				
			</div>
			<div id="connected-facebook" class="connected-container">
				<a class="sbg-facebook" href="http://www.facebook.com/scotchdevelopment"> 
					<div class="connected-cover sbg-facebook"><span class="fa fa-facebook"></span> Like</div>
					<div class="connected-action sbg-facebook">
						<div class="fb-like" data-href="https://www.facebook.com/scotchdevelopment" data-layout="box_count" data-action="like" data-show-faces="false" data-share="false" style="display: block;"><iframe style="width: 30px; height: 19px; border: 0px;"></iframe></div>
					</div>
				</a>
			</div>
			<div id="connected-google-plus" class="connected-container">
				<a class="sbg-google-plus" href="http://plus.google.com/b/113854128330570384219/+ScotchIo/posts">
					<div class="connected-cover sbg-google-plus"><span class="fa fa-google-plus"></span> +1</div>
					<div class="connected-action sbg-google-plus">
						<div class="g-follow" data-annotation="vertical-bubble" data-height="24" data-href="//plus.google.com/u/0/113854128330570384219" data-rel="publisher"></div>
					</div>
				</a>
			</div>

				<div class="row">
					<h4><span class="li_mail"></span></h4>
					<p>Get valuable tips, articles, and resources straight to your inbox. Every Tuesday.</p>
					<div class="col-sm-6 col-sm-offset-3">
					<!-- Begin MailChimp Signup Form -->
					<div id="mc_embed_signup">
					<form action="http://scotch.us3.list-manage.com/subscribe/post?u=1c412c864c03eadaf07ccd61e&id=a818d504d4" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate="">
						
					<div class="mc-field-group form-group">
						<input type="email" name="EMAIL" class="required email form-control" id="mce-EMAIL" placeholder="Your Secret Electronic Address">
					</div>
						<div id="mce-responses" class="clear">
							<div class="response" id="mce-error-response" style="display:none"></div>
							<div class="response" id="mce-success-response" style="display:none"></div>
						</div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
					    <div style="position: absolute; left: -5000px;"><input type="text" name="b_1c412c864c03eadaf07ccd61e_a818d504d4" value=""></div>
						<div class="clear text-center"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button btn btn-warning btn-sm"></div>
					</form>
					</div>
					<!--End mc_embed_signup-->
					</div>
				</div>

		</div>

		<div class="article-ads text-center clearfix">
			<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-4625466825098355" data-ad-slot="9677859429" data-ad-format="auto"></ins>
			<script>
			(adsbygoogle = window.adsbygoogle || []).push({});
			</script>
		</div>

		<!-- COMMENTS -->
		<div id="comment-section" class="white-content">
			
<div id="disqus_thread" style="display: block;"><iframe style="width: 100%; border: 1px solid rgb(204, 204, 204); height: 80px; background-color: rgb(255, 255, 255); background-position: initial initial; background-repeat: initial initial;"></iframe></div>

<script type="text/javascript">
/* <![CDATA[ */
    var disqus_url = 'http://scotch.io/tutorials/javascript/easy-node-authentication-setup-and-local';
    var disqus_identifier = '723 http://scotch.io/?p=723';
    var disqus_container_id = 'disqus_thread';
    var disqus_domain = 'disqus.com';
    var disqus_shortname = 'scotchwebdevelopment';
    var disqus_title = "Easy Node Authentication: Setup and Local";
        var disqus_config = function () {
        var config = this; // Access to the config object
        config.language = '';

        /*
           All currently supported events:
            * preData â€” fires just before we request for initial data
            * preInit - fires after we get initial data but before we load any dependencies
            * onInit  - fires when all dependencies are resolved but before dtpl template is rendered
            * afterRender - fires when template is rendered but before we show it
            * onReady - everything is done
         */

        config.callbacks.preData.push(function() {
            // clear out the container (its filled for SEO/legacy purposes)
            document.getElementById(disqus_container_id).innerHTML = '';
        });
                config.callbacks.onReady.push(function() {
            // sync comments in the background so we don't block the page
            var script = document.createElement('script');
            script.async = true;
            script.src = '?cf_action=sync_comments&post_id=723';

            var firstScript = document.getElementsByTagName( "script" )[0];
            firstScript.parentNode.insertBefore(script, firstScript);
        });
                    };
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
    var DsqLocal = {
        'trackbacks': [
            {
                'author_name':    "Easy Node Authentication: Facebook â™¥ Scotch",
                'author_url':    "http:\/\/scotch.io\/tutorials\/javascript\/easy-node-authentication-facebook",
                'date':            "12\/13\/2013 09:54 AM",
                'excerpt':        "[&#8230;] Getting Started and Local Authentication [&#8230;] ",
                'type':            "pingback"            }
,            {
                'author_name':    "Easy Node Authentication: Twitter â™¥ Scotch",
                'author_url':    "http:\/\/scotch.io\/tutorials\/javascript\/easy-node-authentication-twitter",
                'date':            "12\/13\/2013 09:58 AM",
                'excerpt':        "[&#8230;] Getting Started and Local Authentication [&#8230;] ",
                'type':            "pingback"            }
,            {
                'author_name':    "Easy Node Authentication: Google â™¥ Scotch",
                'author_url':    "http:\/\/scotch.io\/tutorials\/javascript\/easy-node-authentication-google",
                'date':            "12\/18\/2013 06:00 AM",
                'excerpt':        "[&#8230;] Getting Started and Local Authentication [&#8230;] ",
                'type':            "pingback"            }
,            {
                'author_name':    "Easy Node Authentication: Linking All Accounts Together â™¥ Scotch",
                'author_url':    "http:\/\/scotch.io\/tutorials\/javascript\/easy-node-authentication-linking-all-accounts-together",
                'date':            "01\/02\/2014 07:53 AM",
                'excerpt':        "[&#8230;] Getting Started and Local Authentication [&#8230;] ",
                'type':            "pingback"            }
,            {
                'author_name':    "Google",
                'author_url':    "http:\/\/www.google.com\/lxagduie",
                'date':            "01\/17\/2014 08:09 AM",
                'excerpt':        "Google<br \/><br \/>Although sites we backlink to below are considerably not connected to ours, we feel they're truly worth a go by, &hellip;",
                'type':            "trackback"            }
,            {
                'author_name':    "Web Weekly Episode 6 Video Highlights - Dan Wahlin",
                'author_url':    "http:\/\/weblogs.asp.net\/dwahlin\/archive\/2014\/02\/15\/web-weekly-episode-6-video-highlights.aspx",
                'date':            "02\/15\/2014 10:24 AM",
                'excerpt':        "[&#8230;] Easy Node Authentication: Setup and Local [&#8230;] ",
                'type':            "pingback"            }
,            {
                'author_name':    "Node.JS | Pearltrees",
                'author_url':    "http:\/\/www.pearltrees.com\/tonykent\/node-js\/id10749664\/pearl106894060",
                'date':            "03\/09\/2014 03:23 AM",
                'excerpt':        "[&#8230;] Easy Node Authentication: Setup and Local [&#8230;] ",
                'type':            "pingback"            }
,            {
                'author_name':    "Updates &amp; Top Posts Related to Our Work @ Deconstructed | Deconstructed",
                'author_url':    "http:\/\/blog.deconstructed.io\/updates-top-posts-related-to-our-work-deconstructed\/",
                'date':            "04\/29\/2014 05:25 PM",
                'excerpt':        "[&#8230;] Easy Node.js Authentication Setup &amp; Local [&#8230;] ",
                'type':            "pingback"            }
,            {
                'author_name':    "nodeJS: websockets chat with authentication - Tech Forum Network",
                'author_url':    "http:\/\/techforumnetwork.com\/techqns\/nodejs-websockets-chat-with-authentication\/",
                'date':            "05\/01\/2014 10:48 PM",
                'excerpt':        "[&#8230;] Easy Node Authentication [&#8230;] ",
                'type':            "pingback"            }
        ],
        'trackback_url': "http:\/\/scotch.io\/tutorials\/javascript\/easy-node-authentication-setup-and-local\/trackback"    };
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.' + 'disqus.com' + '/embed.js?pname=wordpress&pver=2.74';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
/* ]]> */
</script>
		</div>
		
		<div class="article-ads text-center clearfix">
			<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-4625466825098355" data-ad-slot="6445191424" data-ad-format="auto"></ins>
			<script>
			(adsbygoogle = window.adsbygoogle || []).push({});
			</script>
		</div>
	</div>

	<div id="article-end">
		<div class="page-header">
			<h5>Popular Series</h5>
		</div>
		<div class="row">
			<div class="col-sm-4">
				<a href="http://scotch.io/series/the-complete-visual-guide-to-sublime-text-3">
					<img src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/guide2.jpg" class="img-responsive">
				</a>
				<h4><a href="http://scotch.io/series/the-complete-visual-guide-to-sublime-text-3">
					The Complete Visual Guide to Sublime Text 3
				</a></h4>
			</div>
			<div class="col-sm-4">
				<a href="http://scotch.io/series/easy-node-authentication">
					<img src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-authentication1.jpg" class="img-responsive">
				</a>
				<h4><a href="http://scotch.io/series/easy-node-authentication">
					Easy Node Authentication
				</a></h4>
			</div>
			<div class="col-sm-4">
				<a href="http://scotch.io/series/simple-laravel">
					<img src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/simple-and-easy-laravel.jpg" class="img-responsive">
				</a>
				<h4><a href="http://scotch.io/series/simple-laravel">
					Simple and Easy Laravel
				</a></h4>
			</div>
		</div>
	</div>

<!-- FOR JS ANIMALS -->
<script>	
	console.log("%cEasy Node Authentication: Setup and Local", "color: #EFEFEF; font-size: large; text-transform: uppercase; background: #222; padding: 2px 50px; border-radius: 3px;");
					console.image('http://scotch.io/wp-content/uploads/2013/12/node-authentication-header-300x125.jpg');
		console.log('Chris Sevilleja');
	console.log('December 4, 2013');
</script>


	</div>

	<div id="sidebar-primary" class="col sidebar" style="min-height: 56369px;">
		<div class="sidebar-email sidebar-section">
	<span class="li_mail"></span> 
	<h4>Get Our Latest Articles</h4>
	<!-- Begin MailChimp Signup Form -->
	<div id="mc_embed_signup">
	<form action="http://scotch.us3.list-manage.com/subscribe/post?u=1c412c864c03eadaf07ccd61e&id=a818d504d4" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate="">
		
	<div class="mc-field-group form-group">
		<input type="email" name="EMAIL" class="required email form-control" id="mce-EMAIL" placeholder="Your Secret Electronic Address">
	</div>
		<div id="mce-responses" class="clear">
			<div class="response" id="mce-error-response" style="display:none"></div>
			<div class="response" id="mce-success-response" style="display:none"></div>
		</div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
	    <div style="position: absolute; left: -5000px;"><input type="text" name="b_1c412c864c03eadaf07ccd61e_a818d504d4" value=""></div>
		<div class="clear text-right"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button btn btn-warning btn-sm"></div>
	</form>
	</div>
	<!--End mc_embed_signup-->
</div>

<div class="sidebar-section clearfix text-center">
	<script async="" src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Middle Sidebar -->
<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-4625466825098355" data-ad-slot="3512927827" data-ad-format="auto"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>

<div class="sidebar-sticky" data-spy="affix" data-offset-top="3330" style="width: 0px;">

	<div class="sidebar-section clearfix">
		<h4>Random Awesome Articles</h4>

							<div class="sidebar-article article-small text-center">
				<a href="http://scotch.io/bar-talk/starter/cygwin-starter-configuration-and-instructions"><img width="600" height="250" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/cygwin-starter-600x250.jpg" class="img-responsive wp-post-image" alt="cygwin-starter"></a>
				<h3><a href="http://scotch.io/bar-talk/starter/cygwin-starter-configuration-and-instructions">Cygwin Starter Configuration and Instructions</a></h3>
			</div>
					<div class="sidebar-article article-small text-center">
				<a href="http://scotch.io/bar-talk/calculated-color-scheme-generator"><img width="600" height="250" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/calculated-color-scheme-generator-600x250.jpg" class="img-responsive wp-post-image" alt="calculated-color-scheme-generator"></a>
				<h3><a href="http://scotch.io/bar-talk/calculated-color-scheme-generator">Calculated Color Scheme Generator</a></h3>
			</div>
					<div class="sidebar-article article-small text-center">
				<a href="http://scotch.io/tutorials/javascript/animating-angularjs-apps-ngview"><img width="600" height="250" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/animating-angular-apps-ngview-600x250.jpg" class="img-responsive wp-post-image" alt="animating-angular-apps-ngview"></a>
				<h3><a href="http://scotch.io/tutorials/javascript/animating-angularjs-apps-ngview">Animating AngularJS Apps: ngView</a></h3>
			</div>
			</div>

</div>	</div>

	<div id="sidebar-secondary" class="col sidebar">
		<div class="sidebar-section clearfix">
	<h4>
		<a href="http://scotch.io/advertise">Advertisements <span class="fa fa-info-circle"></span></a>
	</h4>
	<div class="ad-sidebar clearfix">
		<div id="bsap_1291897" class="bsarocks bsap_8321ee0e3825ae084dc5408db80d21db"></div>
	</div>
	<div class="clearfix">
		<div id="bsap_1291908" class="bsarocks bsap_8321ee0e3825ae084dc5408db80d21db"></div>
	</div>
</div>

<div class="sidebar-section clearfix">
	<h4><a href="http://scotch.io/popular"><span class="li_bulb"></span> Our Most Popular Articles</a></h4><a href="http://scotch.io/popular">

				</a><div class="sidebar-article article-small text-center"><a href="http://scotch.io/popular">
			</a><a href="http://scotch.io/bar-talk/best-of-sublime-text-3-features-plugins-and-settings"><img width="300" height="125" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/best-of-sublime-text-300x125.jpg" class="img-responsive wp-post-image" alt="best-of-sublime-text"></a>
			<h3><a href="http://scotch.io/bar-talk/best-of-sublime-text-3-features-plugins-and-settings">Best of Sublime Text 3: Features, Plugins, and Settings</a></h3>
		</div>
			<div class="sidebar-article article-small text-center">
			<a href="http://scotch.io/tutorials/javascript/creating-a-single-page-todo-app-with-node-and-angular"><img width="300" height="125" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-angular-todo-300x125.jpg" class="img-responsive wp-post-image" alt="node-angular-todo"></a>
			<h3><a href="http://scotch.io/tutorials/javascript/creating-a-single-page-todo-app-with-node-and-angular">Creating a Single Page Todo App with Node and Angular</a></h3>
		</div>
			<div class="sidebar-article article-small text-center">
			<a href="http://scotch.io/tutorials/javascript/single-page-apps-with-angularjs-routing-and-templating"><img width="300" height="125" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/angular-routing-300x125.jpg" class="img-responsive wp-post-image" alt="angular-routing"></a>
			<h3><a href="http://scotch.io/tutorials/javascript/single-page-apps-with-angularjs-routing-and-templating">Single Page Apps with AngularJS Routing and Templating</a></h3>
		</div>
			<div class="sidebar-article article-small text-center">
			<a href="http://scotch.io/tutorials/javascript/angularjs-form-validation"><img width="300" height="125" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/angular-forms-300x125.jpg" class="img-responsive wp-post-image" alt="angular-forms"></a>
			<h3><a href="http://scotch.io/tutorials/javascript/angularjs-form-validation">AngularJS Form Validation</a></h3>
		</div>
			<div class="sidebar-article article-small text-center">
			<a href="http://scotch.io/tutorials/javascript/submitting-ajax-forms-the-angularjs-way"><img width="300" height="125" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/angular-forms-300x125(1).jpg" class="img-responsive wp-post-image" alt="angular-forms"></a>
			<h3><a href="http://scotch.io/tutorials/javascript/submitting-ajax-forms-the-angularjs-way">Submitting AJAX Forms: The AngularJS Way</a></h3>
		</div>
			<div class="sidebar-article article-small text-center">
			<a href="http://scotch.io/tutorials/javascript/angular-routing-using-ui-router"><img width="300" height="125" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/angular-routing-ui-router-300x125.jpg" class="img-responsive wp-post-image" alt="angular-routing-ui-router"></a>
			<h3><a href="http://scotch.io/tutorials/javascript/angular-routing-using-ui-router">AngularJS Routing Using UI-Router</a></h3>
		</div>
			<div class="sidebar-article article-small text-center">
			<a href="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/Easy Node Authentication  Setup and Local â™¥ Scotch.htm"><img width="300" height="125" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/node-authentication-header-300x125.jpg" class="img-responsive wp-post-image" alt="node-authentication-header"></a>
			<h3><a href="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/Easy Node Authentication  Setup and Local â™¥ Scotch.htm">Easy Node Authentication: Setup and Local</a></h3>
		</div>
			<div class="sidebar-article article-small text-center">
			<a href="http://scotch.io/tutorials/simple-laravel-crud-with-resource-controllers"><img width="300" height="125" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/laravel-crud-300x125.jpg" class="img-responsive wp-post-image" alt="laravel-crud"></a>
			<h3><a href="http://scotch.io/tutorials/simple-laravel-crud-with-resource-controllers">Simple Laravel CRUD with Resource Controllers</a></h3>
		</div>
			<div class="sidebar-article article-small text-center">
			<a href="http://scotch.io/bar-talk/bootstrap-3-tips-and-tricks-you-might-not-know"><img width="300" height="125" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/bs31-300x125.jpg" class="img-responsive wp-post-image" alt="bs3"></a>
			<h3><a href="http://scotch.io/bar-talk/bootstrap-3-tips-and-tricks-you-might-not-know">Bootstrap 3 Tips and Tricks You Might Not Know</a></h3>
		</div>
			<div class="sidebar-article article-small text-center">
			<a href="http://scotch.io/bar-talk/understanding-the-bootstrap-3-grid-system"><img width="300" height="125" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/bootstrap-grid-300x125.jpg" class="img-responsive wp-post-image" alt="bootstrap-grid"></a>
			<h3><a href="http://scotch.io/bar-talk/understanding-the-bootstrap-3-grid-system">Understanding the Bootstrap 3 Grid System</a></h3>
		</div>
	</div>

<div class="sidebar-sticky affix-top" data-spy="affix" data-offset-top="2330">

<div class="sidebar-section clearfix">
<div id="bsap_1293057" class="bsarocks bsap_8321ee0e3825ae084dc5408db80d21db"></div>
</div>

<div class="sidebar-email sidebar-section">
	<span class="li_mail"></span>
	<h4>Get Our Latest Articles</h4>
	<!-- Begin MailChimp Signup Form -->
	<div id="mc_embed_signup">
	<form action="http://scotch.us3.list-manage.com/subscribe/post?u=1c412c864c03eadaf07ccd61e&id=a818d504d4" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate="">
		
	<div class="mc-field-group form-group">
		<input type="email" name="EMAIL" class="required email form-control" id="mce-EMAIL" placeholder="Your Secret Electronic Address">
	</div>
		<div id="mce-responses" class="clear">
			<div class="response" id="mce-error-response" style="display:none"></div>
			<div class="response" id="mce-success-response" style="display:none"></div>
		</div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
	    <div style="position: absolute; left: -5000px;"><input type="text" name="b_1c412c864c03eadaf07ccd61e_a818d504d4" value=""></div>
		<div class="clear text-right"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button btn btn-warning btn-sm"></div>
	</form>
	</div>
	<!--End mc_embed_signup-->
</div>

</div>	</div>

</div><!-- /main -->

<div id="footer">
	
</div>

<link rel="stylesheet" id="yarppRelatedCss-css" href="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/related.css" type="text/css" media="all">
<script type="text/javascript" src="./Easy Node Authentication  Setup and Local â™¥ Scotch_files/prism.js"></script>

<!-- TWITTER -->
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>

<!-- GOOGLE +1 -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/platform.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>

<!-- BuySellAds Ad Code -->
<script type="text/javascript">
(function(){
  var bsa = document.createElement('script');
     bsa.type = 'text/javascript';
     bsa.async = true;
     bsa.src = 'http://s3.buysellads.com/ac/bsa.js';
  (document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(bsa);
})();
</script>

<!-- GOOGLE ADS -->
<script async="" src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>

<!-- ANALYTICS -->
<script>
	function trackOutboundLink(link, category, action) { 	 
		try { 
			_gaq.push(['_trackEvent', category , action]); 
		} catch(err){}
		 
		setTimeout(function() {
			document.location.href = link.href;
		}, 100);
	}

	var _gaq = _gaq || [];
	var pluginUrl = '//www.google-analytics.com/plugins/ga/inpage_linkid.js';
	_gaq.push(['_require', 'inpage_linkid', pluginUrl]);
	_gaq.push(['_setAccount', 'UA-36045075-1']);
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>



</div><!-- #site-wrapper -->

<!-- SECRET LAUNCH CODES FOR DEVS -->
<!-- Easter Egg 1: aHR0cDovL3Njb3RjaC5pby/imaU= -->

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"beacon-2.newrelic.com","licenseKey":"c9625edc98","applicationID":"3353285","transactionName":"ZARTYRMEXkYABxVeW11OcFYVDF9bThcIWVNfBA==","queueTime":0,"applicationTime":1098,"ttGuid":"","agentToken":"","userAttributes":"","errorBeacon":"jserror.newrelic.com","agent":"js-agent.newrelic.com\/nr-411.min.js"}</script>
<script src="http://js-agent.newrelic.com/nr-411.min.js"></script><script id="hiddenlpsubmitdiv" style="display: none;"></script><script>try{for(var lastpass_iter=0; lastpass_iter < document.forms.length; lastpass_iter++){ var lastpass_f = document.forms[lastpass_iter]; if(typeof(lastpass_f.lpsubmitorig2)=="undefined"){ lastpass_f.lpsubmitorig2 = lastpass_f.submit; lastpass_f.submit = function(){ var form=this; var customEvent = document.createEvent("Event"); customEvent.initEvent("lpCustomEvent", true, true); var d = document.getElementById("hiddenlpsubmitdiv"); if (d) {for(var i = 0; i < document.forms.length; i++){ if(document.forms[i]==form){ d.innerText=i; } } d.dispatchEvent(customEvent); }form.lpsubmitorig2(); } } }}catch(e){}</script></body><div class="gr-context gr-dict gr-context-loader" style="display: none;"><span class="gr-triangle"></span><div class="gr-placeholder"></div><a href="http://www.grammarly.com/?utm_source=dict&utm_medium=link&utm_campaign=chrome_plg" target="_blank" class="gr-hint-settings"></a><strong class="gr-title"></strong><div class="gr-dict-content"></div></div></html>